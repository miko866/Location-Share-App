{"ast":null,"code":"var _jsxFileName = \"/Users/michalevo/Desktop/My_Code/React/location-share-app-client/location-share-app/src/components/LocationCard.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthenticationController from '../controllers/AuthenticationController';\nimport { connect } from 'react-redux';\nimport { getPosts } from '../actions/projectActions';\nimport PropTypes from 'prop-types';\nimport '../assets/css/components/location-card.css';\n\nclass LocationCard extends Component {\n  constructor(props) {\n    super(props); //* Bully Data fro Testing\n\n    this.state = {\n      locations: [{\n        id: 1,\n        title: 'Test Title 1',\n        street: 'Kapellenstrasse',\n        streetNumber: '26',\n        city: 'Bern',\n        zip: 3011,\n        image: 'test1.jpg',\n        text: 'douaguiogaug  ouahdo ah d aohdo ahoia h.'\n      }, {\n        id: 2,\n        title: 'Test Title 2',\n        street: 'Bundesplatz',\n        streetNumber: '3',\n        city: 'Bern',\n        zip: 3005,\n        image: 'test2.jpg',\n        text: 'douaguiogaug  ouahdo ah d aohdo ahoia h. hsoudghouqsgdog doiuqg odoqiugd ouq.'\n      }, {\n        id: 3,\n        title: 'Test Title 3',\n        street: 'Poststrasse',\n        streetNumber: '10',\n        city: 'Herisau',\n        zip: 9100,\n        image: 'test3.png',\n        text: 'douaguiogaug  ouahdo ah d aohdo ahoia h. hsoudghouqsgdog doiuqg odoqiugd ouq.'\n      }]\n    }; //* Register methods\n\n    this.showMap = this.showMap.bind(this);\n    this.editLocation = this.editLocation.bind(this);\n  }\n\n  showMap(street, streetNumber, zip, city) {\n    let address = street + ' ' + streetNumber + ' ' + zip + ' ' + city;\n    sessionStorage.setItem('address', address); //* Redirect to Map with address from card\n\n    this.props.history.push('/map');\n  } //* Hard reload\n\n\n  componentDidMount() {\n    this.props.getPosts();\n    let user = sessionStorage.getItem('authenticatedEmail'); //* Check if user is logged\n\n    if (user !== '') {\n      //* Check localStorage\n      if (window.localStorage) {\n        //* Exist any item -> firstLoad -> created it\n        if (!localStorage.getItem('firstLoad')) {\n          localStorage['firstLoad'] = true;\n          window.location.reload();\n        } else localStorage.removeItem('firstLoad');\n      }\n    }\n  }\n\n  editLocation() {\n    this.props.history.push('/editPost/:id');\n  }\n\n  render() {\n    const posts = this.props.post.posts; //* Variable with Auth method\n    //* Check if user is logged in\n\n    const isUserLoggedIn = AuthenticationController.isUserLoggedIn();\n    return React.createElement(\"section\", {\n      className: \"location-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, posts.map(item => React.createElement(\"div\", {\n      className: \"card\",\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, item.title), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, item.street, \" \", item.streetNumber, \" \", item.zip, \" \", item.city), React.createElement(\"div\", {\n      className: \"location-card__author pb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/author/{id}\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"miko866\")), React.createElement(\"p\", {\n      className: \"card-text pb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, item.text), React.createElement(\"div\", {\n      to: \"/map\",\n      className: \"btn btn-outline-danger text-danger mr-4\",\n      onClick: () => this.showMap(item.street, item.streetNumber, item.zip, item.city),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"View on Map\"), isUserLoggedIn && React.createElement(\"div\", {\n      className: \"btn btn-outline-primary text-primary mr-5\",\n      onClick: this.editLocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Link, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Edit\")), isUserLoggedIn && React.createElement(\"div\", {\n      className: \"btn btn-link text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Delete\"))))));\n  }\n\n}\n\nLocationCard.propsTypes = {\n  post: PropTypes.object.isRequired,\n  getPosts: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPosts\n})(LocationCard);","map":{"version":3,"sources":["/Users/michalevo/Desktop/My_Code/React/location-share-app-client/location-share-app/src/components/LocationCard.jsx"],"names":["React","Component","Link","AuthenticationController","connect","getPosts","PropTypes","LocationCard","constructor","props","state","locations","id","title","street","streetNumber","city","zip","image","text","showMap","bind","editLocation","address","sessionStorage","setItem","history","push","componentDidMount","user","getItem","window","localStorage","location","reload","removeItem","render","posts","post","isUserLoggedIn","map","item","propsTypes","object","isRequired","func","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,wBAAP,MAAqC,yCAArC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,4CAAP;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AACnCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,CACT;AACEC,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE,cAFT;AAGEC,QAAAA,MAAM,EAAE,iBAHV;AAIEC,QAAAA,YAAY,EAAE,IAJhB;AAKEC,QAAAA,IAAI,EAAE,MALR;AAMEC,QAAAA,GAAG,EAAE,IANP;AAOEC,QAAAA,KAAK,EAAE,WAPT;AAQEC,QAAAA,IAAI,EAAE;AARR,OADS,EAWT;AACEP,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE,cAFT;AAGEC,QAAAA,MAAM,EAAE,aAHV;AAIEC,QAAAA,YAAY,EAAE,GAJhB;AAKEC,QAAAA,IAAI,EAAE,MALR;AAMEC,QAAAA,GAAG,EAAE,IANP;AAOEC,QAAAA,KAAK,EAAE,WAPT;AAQEC,QAAAA,IAAI,EAAE;AARR,OAXS,EAqBT;AACEP,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE,cAFT;AAGEC,QAAAA,MAAM,EAAE,aAHV;AAIEC,QAAAA,YAAY,EAAE,IAJhB;AAKEC,QAAAA,IAAI,EAAE,SALR;AAMEC,QAAAA,GAAG,EAAE,IANP;AAOEC,QAAAA,KAAK,EAAE,WAPT;AAQEC,QAAAA,IAAI,EAAE;AARR,OArBS;AADA,KAAb,CAHiB,CAsCjB;;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,OAAO,CAACN,MAAD,EAASC,YAAT,EAAuBE,GAAvB,EAA4BD,IAA5B,EAAkC;AACvC,QAAIO,OAAO,GAAGT,MAAM,GAAG,GAAT,GAAeC,YAAf,GAA8B,GAA9B,GAAoCE,GAApC,GAA0C,GAA1C,GAAgDD,IAA9D;AACAQ,IAAAA,cAAc,CAACC,OAAf,CAAuB,SAAvB,EAAkCF,OAAlC,EAFuC,CAIvC;;AACA,SAAKd,KAAL,CAAWiB,OAAX,CAAmBC,IAAnB,CAAwB,MAAxB;AACD,GAlDkC,CAoDnC;;;AACAC,EAAAA,iBAAiB,GAAG;AAClB,SAAKnB,KAAL,CAAWJ,QAAX;AAEA,QAAIwB,IAAI,GAAGL,cAAc,CAACM,OAAf,CAAuB,oBAAvB,CAAX,CAHkB,CAIlB;;AACA,QAAID,IAAI,KAAK,EAAb,EAAiB;AACf;AACA,UAAIE,MAAM,CAACC,YAAX,EAAyB;AACvB;AACA,YAAI,CAACA,YAAY,CAACF,OAAb,CAAqB,WAArB,CAAL,EAAwC;AACtCE,UAAAA,YAAY,CAAC,WAAD,CAAZ,GAA4B,IAA5B;AACAD,UAAAA,MAAM,CAACE,QAAP,CAAgBC,MAAhB;AACD,SAHD,MAGOF,YAAY,CAACG,UAAb,CAAwB,WAAxB;AACR;AACF;AACF;;AAEDb,EAAAA,YAAY,GAAG;AACb,SAAKb,KAAL,CAAWiB,OAAX,CAAmBC,IAAnB,CAAwB,eAAxB;AACD;;AAEDS,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAK5B,KAAL,CAAW6B,IADtB,CACCD,KADD,EAGP;AACA;;AACA,UAAME,cAAc,GAAGpC,wBAAwB,CAACoC,cAAzB,EAAvB;AAEA,WACE;AAAS,MAAA,SAAS,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGF,KAAK,CAACG,GAAN,CAAWC,IAAD,IACT;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAEA,IAAI,CAAC7B,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B6B,IAAI,CAAC5B,KAAjC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG4B,IAAI,CAAC3B,MADR,OACiB2B,IAAI,CAAC1B,YADtB,OACqC0B,IAAI,CAACxB,GAD1C,OACgDwB,IAAI,CAACzB,IADrD,CAFF,EAKE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CALF,EAQE;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+ByB,IAAI,CAACtB,IAApC,CARF,EASE;AACE,MAAA,EAAE,EAAC,MADL;AAEE,MAAA,SAAS,EAAC,yCAFZ;AAGE,MAAA,OAAO,EAAE,MAAM,KAAKC,OAAL,CAAaqB,IAAI,CAAC3B,MAAlB,EAA0B2B,IAAI,CAAC1B,YAA/B,EAA6C0B,IAAI,CAACxB,GAAlD,EAAuDwB,IAAI,CAACzB,IAA5D,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBATF,EAiBGuB,cAAc,IACb;AACE,MAAA,SAAS,EAAC,2CADZ;AAEE,MAAA,OAAO,EAAE,KAAKjB,YAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CAlBJ,EAwBGiB,cAAc,IAAI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBrB,CANF,CADD,CAFH,CADF,CADF;AA0CD;;AA3HkC;;AA8HrChC,YAAY,CAACmC,UAAb,GAA0B;AACxBJ,EAAAA,IAAI,EAAEhC,SAAS,CAACqC,MAAV,CAAiBC,UADC;AAExBvC,EAAAA,QAAQ,EAAEC,SAAS,CAACuC,IAAV,CAAeD;AAFD,CAA1B;;AAKA,MAAME,eAAe,GAAIpC,KAAD,KAAY;AAClC4B,EAAAA,IAAI,EAAE5B,KAAK,CAAC4B;AADsB,CAAZ,CAAxB;;AAIA,eAAelC,OAAO,CAAC0C,eAAD,EAAkB;AAAEzC,EAAAA;AAAF,CAAlB,CAAP,CAAuCE,YAAvC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthenticationController from '../controllers/AuthenticationController';\nimport { connect } from 'react-redux';\nimport { getPosts } from '../actions/projectActions';\nimport PropTypes from 'prop-types';\n\nimport '../assets/css/components/location-card.css';\n\nclass LocationCard extends Component {\n  constructor(props) {\n    super(props);\n    //* Bully Data fro Testing\n    this.state = {\n      locations: [\n        {\n          id: 1,\n          title: 'Test Title 1',\n          street: 'Kapellenstrasse',\n          streetNumber: '26',\n          city: 'Bern',\n          zip: 3011,\n          image: 'test1.jpg',\n          text: 'douaguiogaug  ouahdo ah d aohdo ahoia h.',\n        },\n        {\n          id: 2,\n          title: 'Test Title 2',\n          street: 'Bundesplatz',\n          streetNumber: '3',\n          city: 'Bern',\n          zip: 3005,\n          image: 'test2.jpg',\n          text: 'douaguiogaug  ouahdo ah d aohdo ahoia h. hsoudghouqsgdog doiuqg odoqiugd ouq.',\n        },\n        {\n          id: 3,\n          title: 'Test Title 3',\n          street: 'Poststrasse',\n          streetNumber: '10',\n          city: 'Herisau',\n          zip: 9100,\n          image: 'test3.png',\n          text: 'douaguiogaug  ouahdo ah d aohdo ahoia h. hsoudghouqsgdog doiuqg odoqiugd ouq.',\n        },\n      ],\n    };\n\n    //* Register methods\n    this.showMap = this.showMap.bind(this);\n    this.editLocation = this.editLocation.bind(this);\n  }\n\n  showMap(street, streetNumber, zip, city) {\n    let address = street + ' ' + streetNumber + ' ' + zip + ' ' + city;\n    sessionStorage.setItem('address', address);\n\n    //* Redirect to Map with address from card\n    this.props.history.push('/map');\n  }\n\n  //* Hard reload\n  componentDidMount() {\n    this.props.getPosts();\n\n    let user = sessionStorage.getItem('authenticatedEmail');\n    //* Check if user is logged\n    if (user !== '') {\n      //* Check localStorage\n      if (window.localStorage) {\n        //* Exist any item -> firstLoad -> created it\n        if (!localStorage.getItem('firstLoad')) {\n          localStorage['firstLoad'] = true;\n          window.location.reload();\n        } else localStorage.removeItem('firstLoad');\n      }\n    }\n  }\n\n  editLocation() {\n    this.props.history.push('/editPost/:id');\n  }\n\n  render() {\n    const { posts } = this.props.post;\n\n    //* Variable with Auth method\n    //* Check if user is logged in\n    const isUserLoggedIn = AuthenticationController.isUserLoggedIn();\n\n    return (\n      <section className=\"location-card\">\n        <div className=\"container\">\n          {/* Render Cards from bully data */}\n          {posts.map((item) => (\n            <div className=\"card\" key={item.id}>\n              {/* <img\n                src={require(`../assets/img/${item.image}`)}\n                className=\"card-img-top\"\n                alt={item.title}\n              /> */}\n              <div className=\"card-body\">\n                <h2 className=\"card-title\">{item.title}</h2>\n                <h5>\n                  {item.street} {item.streetNumber} {item.zip} {item.city}\n                </h5>\n                <div className=\"location-card__author pb-3\">\n                  <Link to=\"/author/{id}\">miko866</Link>\n                </div>\n                <p className=\"card-text pb-3\">{item.text}</p>\n                <div\n                  to=\"/map\"\n                  className=\"btn btn-outline-danger text-danger mr-4\"\n                  onClick={() => this.showMap(item.street, item.streetNumber, item.zip, item.city)}>\n                  View on Map\n                </div>\n\n                {/* Only Logged user can see that */}\n                {isUserLoggedIn && (\n                  <div\n                    className=\"btn btn-outline-primary text-primary mr-5\"\n                    onClick={this.editLocation}>\n                    <Link>Edit</Link>\n                  </div>\n                )}\n                {isUserLoggedIn && <div className=\"btn btn-link text-danger\">Delete</div>}\n              </div>\n            </div>\n          ))}\n        </div>\n      </section>\n    );\n  }\n}\n\nLocationCard.propsTypes = {\n  post: PropTypes.object.isRequired,\n  getPosts: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, { getPosts })(LocationCard);\n"]},"metadata":{},"sourceType":"module"}