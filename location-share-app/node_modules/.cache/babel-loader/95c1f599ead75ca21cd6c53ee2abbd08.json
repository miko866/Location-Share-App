{"ast":null,"code":"var _jsxFileName = \"/Users/michalevo/Desktop/My_Code/React/location-share-app-client/location-share-app/src/components/LocationCard.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthenticationController from '../controllers/AuthenticationController';\nimport { connect } from 'react-redux';\nimport { getPosts, deletePost } from '../actions/projectActions';\nimport PropTypes from 'prop-types';\nimport jwtDecode from 'jwt-decode';\nimport '../assets/css/components/location-card.css';\n\nclass LocationCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAlert: false,\n      loggedUserId: 0\n    }; //* Register methods\n\n    this.showMap = this.showMap.bind(this);\n    this.editLocation = this.editLocation.bind(this);\n    this.onDeleteClick = this.onDeleteClick.bind(this);\n  }\n\n  onDeleteClick(id) {\n    this.props.deletePost(id);\n  }\n\n  showMap(street, streetNumber, zip, city) {\n    let address = street + ' ' + streetNumber + ' ' + zip + ' ' + city;\n    sessionStorage.setItem('address', address); //* Redirect to Map with address from card\n\n    this.props.history.push('/map');\n  } //* Hard reload\n\n\n  componentDidMount() {\n    this.props.getPosts();\n    const token = sessionStorage.getItem('jwtToken');\n    const decoded = jwtDecode(token); // this.setState({ loggedUserId: decoded });\n\n    console.log('TU je Token', toIntdecoded.id);\n    let user = sessionStorage.getItem('authenticatedEmail'); //* Check if user is logged\n\n    if (user !== '') {\n      //* Check localStorage\n      if (window.localStorage) {\n        //* Exist any item -> firstLoad -> created it\n        if (!localStorage.getItem('firstLoad')) {\n          localStorage['firstLoad'] = true;\n          window.location.reload();\n        } else localStorage.removeItem('firstLoad');\n      }\n    }\n  }\n\n  editLocation() {\n    this.props.history.push('/editPost/:id');\n  }\n\n  render() {\n    const posts = this.props.post.posts;\n    console.log('Posts Props', posts); //* Variable with Auth method\n    //* Check if user is logged in\n\n    const isUserLoggedIn = AuthenticationController.isUserLoggedIn();\n    return React.createElement(\"section\", {\n      className: \"location-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, posts.map(item => React.createElement(\"div\", {\n      className: \"card\",\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, item.title), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, item.street, \" \", item.streetNumber, \" \", item.zip, \" \", item.city), React.createElement(\"div\", {\n      className: \"location-card__author pb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/author/{id}\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, item.postAuthor)), React.createElement(\"p\", {\n      className: \"card-text pb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, item.text), React.createElement(\"div\", {\n      to: \"/map\",\n      className: \"btn btn-outline-danger text-danger mr-4\",\n      onClick: () => this.showMap(item.street, item.streetNumber, item.zip, item.city),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"View on Map\"), isUserLoggedIn && React.createElement(Link, {\n      to: `/editPost/${item.id}`,\n      className: \"btn btn-outline-primary text-primary mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Edit\"), isUserLoggedIn && React.createElement(\"div\", {\n      className: \"btn btn-link text-danger\",\n      onClick: () => this.onDeleteClick(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Delete\"))))));\n  }\n\n}\n\nLocationCard.propsTypes = {\n  post: PropTypes.object.isRequired,\n  getPosts: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPosts,\n  deletePost\n})(LocationCard);","map":{"version":3,"sources":["/Users/michalevo/Desktop/My_Code/React/location-share-app-client/location-share-app/src/components/LocationCard.jsx"],"names":["React","Component","Link","AuthenticationController","connect","getPosts","deletePost","PropTypes","jwtDecode","LocationCard","constructor","props","state","showAlert","loggedUserId","showMap","bind","editLocation","onDeleteClick","id","street","streetNumber","zip","city","address","sessionStorage","setItem","history","push","componentDidMount","token","getItem","decoded","console","log","toIntdecoded","user","window","localStorage","location","reload","removeItem","render","posts","post","isUserLoggedIn","map","item","title","postAuthor","text","propsTypes","object","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthenticationController from '../controllers/AuthenticationController';\nimport { connect } from 'react-redux';\nimport { getPosts, deletePost } from '../actions/projectActions';\nimport PropTypes from 'prop-types';\nimport jwtDecode from 'jwt-decode';\n\nimport '../assets/css/components/location-card.css';\n\nclass LocationCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAlert: false,\n      loggedUserId: 0,\n    };\n\n    //* Register methods\n    this.showMap = this.showMap.bind(this);\n    this.editLocation = this.editLocation.bind(this);\n    this.onDeleteClick = this.onDeleteClick.bind(this);\n  }\n\n  onDeleteClick(id) {\n    this.props.deletePost(id);\n  }\n\n  showMap(street, streetNumber, zip, city) {\n    let address = street + ' ' + streetNumber + ' ' + zip + ' ' + city;\n    sessionStorage.setItem('address', address);\n\n    //* Redirect to Map with address from card\n    this.props.history.push('/map');\n  }\n\n  //* Hard reload\n  componentDidMount() {\n    this.props.getPosts();\n\n    const token = sessionStorage.getItem('jwtToken');\n    const decoded = jwtDecode(token);\n    // this.setState({ loggedUserId: decoded });\n    console.log('TU je Token', toIntdecoded.id);\n\n    let user = sessionStorage.getItem('authenticatedEmail');\n    //* Check if user is logged\n    if (user !== '') {\n      //* Check localStorage\n      if (window.localStorage) {\n        //* Exist any item -> firstLoad -> created it\n        if (!localStorage.getItem('firstLoad')) {\n          localStorage['firstLoad'] = true;\n          window.location.reload();\n        } else localStorage.removeItem('firstLoad');\n      }\n    }\n  }\n\n  editLocation() {\n    this.props.history.push('/editPost/:id');\n  }\n\n  render() {\n    const { posts } = this.props.post;\n\n    console.log('Posts Props', posts);\n\n    //* Variable with Auth method\n    //* Check if user is logged in\n    const isUserLoggedIn = AuthenticationController.isUserLoggedIn();\n\n    return (\n      <section className=\"location-card\">\n        <div className=\"container\">\n          {/* Render Cards from bully data */}\n          {posts.map((item) => (\n            <div className=\"card\" key={item.id}>\n              {/* <img\n                src={require(`../assets/img/${item.image}`)}\n                className=\"card-img-top\"\n                alt={item.title}\n              /> */}\n              <div className=\"card-body\">\n                <h2 className=\"card-title\">{item.title}</h2>\n                <h5>\n                  {item.street} {item.streetNumber} {item.zip} {item.city}\n                </h5>\n                <div className=\"location-card__author pb-3\">\n                  <Link to=\"/author/{id}\">{item.postAuthor}</Link>\n                </div>\n                <p className=\"card-text pb-3\">{item.text}</p>\n                <div\n                  to=\"/map\"\n                  className=\"btn btn-outline-danger text-danger mr-4\"\n                  onClick={() => this.showMap(item.street, item.streetNumber, item.zip, item.city)}>\n                  View on Map\n                </div>\n\n                {/* Only Logged user can see that */}\n                {isUserLoggedIn && (\n                  <Link\n                    to={`/editPost/${item.id}`}\n                    className=\"btn btn-outline-primary text-primary mr-5\">\n                    Edit\n                  </Link>\n                )}\n                {isUserLoggedIn && (\n                  <div\n                    className=\"btn btn-link text-danger\"\n                    onClick={() => this.onDeleteClick(item.id)}>\n                    Delete\n                  </div>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      </section>\n    );\n  }\n}\n\nLocationCard.propsTypes = {\n  post: PropTypes.object.isRequired,\n  getPosts: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, { getPosts, deletePost })(LocationCard);\n"]},"metadata":{},"sourceType":"module"}