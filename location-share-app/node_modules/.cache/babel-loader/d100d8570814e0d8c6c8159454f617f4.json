{"ast":null,"code":"import axios from 'axios';\nimport { GET_ERRORS, GET_POSTS, GET_POST, DELETE_POST, GET_POST_BY_AUTHOR, GET_USERS, GET_USER } from './types'; //* Create new post in CreateLocation component\n\nexport const createPost = (project, history) => async dispatch => {\n  try {\n    console.log('TU SOMM', project); // Connection to Server\n\n    await axios.post('/api/posts', project, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    });\n    history.push('/');\n  } catch (error) {\n    // Save errors into redux\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n}; // Show all posts in Dashboard component\n\nexport const getPosts = () => async dispatch => {\n  // Connection to Server\n  const res = await axios.get('/api/posts/allPosts'); // Give me data\n\n  dispatch({\n    type: GET_POSTS,\n    payload: res.data\n  });\n}; //* Show all users in UsersCard component\n\nexport const getUsers = () => async dispatch => {\n  // Connection to Server\n  const res = await axios.get('/api/users/allUsers'); // Give me data\n\n  dispatch({\n    type: GET_USERS,\n    payload: res.data\n  });\n};\nexport const getUser = id => async dispatch => {\n  // Connection to Server\n  const res = await axios.get(`/api/users/${id}`); // Give me data\n\n  dispatch({\n    type: GET_USER,\n    payload: res.data\n  });\n}; //* Show all posts by author in LocationCardUserPosts component\n\nexport const getPostsByAuthor = () => async dispatch => {\n  // Connection to Server\n  const res = await axios.get(`/api/posts/allPostsByAuthor`); // Give me data\n\n  dispatch({\n    type: GET_POST_BY_AUTHOR,\n    payload: res.data\n  });\n}; //* Show post in EditLocation component\n\nexport const getPost = id => async dispatch => {\n  // Connection to Server\n  const res = await axios.get(`/api/posts/${id}`); // Give me data\n\n  dispatch({\n    type: GET_POST,\n    payload: res.data\n  });\n}; // Delete post in Dashboard & LocationCardUserPosts\n\nexport const deletePost = id => async dispatch => {\n  if (window.confirm('Are you sure?')) {\n    // Connection to Server\n    await axios.delete(`/api/posts/deletePost/${id}`); // Delete it\n\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n  }\n};","map":{"version":3,"sources":["/Users/michalevo/Desktop/My_Code/Java/location-share-app/location-share-app/src/actions/projectActions.js"],"names":["axios","GET_ERRORS","GET_POSTS","GET_POST","DELETE_POST","GET_POST_BY_AUTHOR","GET_USERS","GET_USER","createPost","project","history","dispatch","console","log","post","headers","push","error","type","payload","response","data","getPosts","res","get","getUsers","getUser","id","getPostsByAuthor","getPost","deletePost","window","confirm","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n  GET_ERRORS,\n  GET_POSTS,\n  GET_POST,\n  DELETE_POST,\n  GET_POST_BY_AUTHOR,\n  GET_USERS,\n  GET_USER,\n} from './types';\n\n//* Create new post in CreateLocation component\nexport const createPost = (project, history) => async (dispatch) => {\n  try {\n    console.log('TU SOMM', project);\n\n    // Connection to Server\n    await axios.post('/api/posts', project, { headers: { 'content-type': 'multipart/form-data' } });\n    history.push('/');\n  } catch (error) {\n    // Save errors into redux\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\n// Show all posts in Dashboard component\nexport const getPosts = () => async (dispatch) => {\n  // Connection to Server\n  const res = await axios.get('/api/posts/allPosts');\n  // Give me data\n  dispatch({\n    type: GET_POSTS,\n    payload: res.data,\n  });\n};\n\n//* Show all users in UsersCard component\nexport const getUsers = () => async (dispatch) => {\n  // Connection to Server\n  const res = await axios.get('/api/users/allUsers');\n  // Give me data\n  dispatch({\n    type: GET_USERS,\n    payload: res.data,\n  });\n};\n\nexport const getUser = (id) => async (dispatch) => {\n  // Connection to Server\n  const res = await axios.get(`/api/users/${id}`);\n  // Give me data\n  dispatch({\n    type: GET_USER,\n    payload: res.data,\n  });\n};\n\n//* Show all posts by author in LocationCardUserPosts component\nexport const getPostsByAuthor = () => async (dispatch) => {\n  // Connection to Server\n  const res = await axios.get(`/api/posts/allPostsByAuthor`);\n  // Give me data\n  dispatch({\n    type: GET_POST_BY_AUTHOR,\n    payload: res.data,\n  });\n};\n\n//* Show post in EditLocation component\nexport const getPost = (id) => async (dispatch) => {\n  // Connection to Server\n  const res = await axios.get(`/api/posts/${id}`);\n  // Give me data\n  dispatch({\n    type: GET_POST,\n    payload: res.data,\n  });\n};\n\n// Delete post in Dashboard & LocationCardUserPosts\nexport const deletePost = (id) => async (dispatch) => {\n  if (window.confirm('Are you sure?')) {\n    // Connection to Server\n    await axios.delete(`/api/posts/deletePost/${id}`);\n    // Delete it\n    dispatch({\n      type: DELETE_POST,\n      payload: id,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}