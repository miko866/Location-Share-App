{"ast":null,"code":"import axios from 'axios';\nimport { GET_ERRORS, GET_POSTS, GET_POST, DELETE_POST } from './types'; //* Create new post in CreateLocation component\n\nexport const createPost = (project, history) => async dispatch => {\n  try {\n    // Connection to Server\n    const res = await axios.post('/api/posts', project);\n    history.push('/');\n  } catch (error) {\n    // Save errors into redux\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n}; //* Show all posts in LocationCard component\n\nexport const getPosts = () => async dispatch => {\n  // Connection to Server\n  const res = await axios.get('/api/posts/allPosts'); // Save errors into redux\n\n  console.log('Res Data Posts', res);\n  dispatch({\n    type: GET_POSTS,\n    payload: res.data\n  });\n};\nexport const getPost = (id, history) => async dispatch => {\n  const res = await axios.get(`/api/posts/${id}`);\n  dispatch({\n    type: GET_POST,\n    payload: res.data\n  });\n};\nexport const deletePost = id => async dispatch => {\n  if (window.confirm('Are you sure?')) {\n    await axios.delete(`/api/posts/deletePost/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n  }\n};","map":{"version":3,"sources":["/Users/michalevo/Desktop/My_Code/React/location-share-app-client/location-share-app/src/actions/projectActions.js"],"names":["axios","GET_ERRORS","GET_POSTS","GET_POST","DELETE_POST","createPost","project","history","dispatch","res","post","push","error","type","payload","response","data","getPosts","get","console","log","getPost","id","deletePost","window","confirm","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,EAA0CC,WAA1C,QAA6D,SAA7D,C,CAEA;;AACA,OAAO,MAAMC,UAAU,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsB,MAAOC,QAAP,IAAoB;AAClE,MAAI;AACF;AACA,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,YAAX,EAAyBJ,OAAzB,CAAlB;AACAC,IAAAA,OAAO,CAACI,IAAR,CAAa,GAAb;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd;AACAJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEZ,UADC;AAEPa,MAAAA,OAAO,EAAEF,KAAK,CAACG,QAAN,CAAeC;AAFjB,KAAD,CAAR;AAID;AACF,CAZM,C,CAcP;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOT,QAAP,IAAoB;AAChD;AACA,QAAMC,GAAG,GAAG,MAAMT,KAAK,CAACkB,GAAN,CAAU,qBAAV,CAAlB,CAFgD,CAGhD;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BX,GAA9B;AAEAD,EAAAA,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEX,SADC;AAEPY,IAAAA,OAAO,EAAEL,GAAG,CAACO;AAFN,GAAD,CAAR;AAID,CAXM;AAaP,OAAO,MAAMK,OAAO,GAAG,CAACC,EAAD,EAAKf,OAAL,KAAiB,MAAOC,QAAP,IAAoB;AAC1D,QAAMC,GAAG,GAAG,MAAMT,KAAK,CAACkB,GAAN,CAAW,cAAaI,EAAG,EAA3B,CAAlB;AACAd,EAAAA,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEV,QADC;AAEPW,IAAAA,OAAO,EAAEL,GAAG,CAACO;AAFN,GAAD,CAAR;AAID,CANM;AAQP,OAAO,MAAMO,UAAU,GAAID,EAAD,IAAQ,MAAOd,QAAP,IAAoB;AACpD,MAAIgB,MAAM,CAACC,OAAP,CAAe,eAAf,CAAJ,EAAqC;AACnC,UAAMzB,KAAK,CAAC0B,MAAN,CAAc,yBAAwBJ,EAAG,EAAzC,CAAN;AACAd,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAET,WADC;AAEPU,MAAAA,OAAO,EAAEQ;AAFF,KAAD,CAAR;AAID;AACF,CARM","sourcesContent":["import axios from 'axios';\nimport { GET_ERRORS, GET_POSTS, GET_POST, DELETE_POST } from './types';\n\n//* Create new post in CreateLocation component\nexport const createPost = (project, history) => async (dispatch) => {\n  try {\n    // Connection to Server\n    const res = await axios.post('/api/posts', project);\n    history.push('/');\n  } catch (error) {\n    // Save errors into redux\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\n//* Show all posts in LocationCard component\nexport const getPosts = () => async (dispatch) => {\n  // Connection to Server\n  const res = await axios.get('/api/posts/allPosts');\n  // Save errors into redux\n\n  console.log('Res Data Posts', res);\n\n  dispatch({\n    type: GET_POSTS,\n    payload: res.data,\n  });\n};\n\nexport const getPost = (id, history) => async (dispatch) => {\n  const res = await axios.get(`/api/posts/${id}`);\n  dispatch({\n    type: GET_POST,\n    payload: res.data,\n  });\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  if (window.confirm('Are you sure?')) {\n    await axios.delete(`/api/posts/deletePost/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}