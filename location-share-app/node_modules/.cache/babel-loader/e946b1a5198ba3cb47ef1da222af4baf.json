{"ast":null,"code":"var _jsxFileName = \"/Users/michalevo/Desktop/My_Code/React/location-share-app-client/location-share-app/src/components/CreateLocation.jsx\";\nimport React, { Component } from 'react';\nimport MaterialIcon from 'material-icons-react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProject } from '../actions/projectActions';\nimport '../assets/css/components/create-location.css';\n\nclass CreateLocation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      street: '',\n      streetNumber: '',\n      zip: '',\n      city: '',\n      text: '',\n      image: '',\n      imagePreviewUrl: '',\n      imageName: '',\n      showAlertRequiredFields: false,\n      errors: {}\n    }; //* Register methods\n\n    this.handleChange = this.handleChange.bind(this);\n    this.deleteImage = this.deleteImage.bind(this);\n    this.createLocation = this.createLocation.bind(this);\n  } // Life cycle hooks\n\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  } //* Check inputs for changes\n\n\n  handleChange(event) {\n    //* Find the right state and save content from input into state\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  } //*Â Delete image\n\n\n  deleteImage() {\n    this.setState({\n      imagePreviewUrl: '',\n      imageName: '',\n      image: ''\n    });\n  } //* Send on Server\n\n\n  _handleSubmit(event) {\n    event.preventDefault();\n    console.log('handle submit - ', this.state.image);\n  } //* Load image\n\n\n  _handleImageChange(event) {\n    event.preventDefault(); //* Read data from HTML element\n\n    let reader = new FileReader(); //* Find image data into element\n\n    let file = event.target.files[0]; //* Save image name into state\n\n    this.setState({\n      imageName: file.name\n    }); //* After added image find base64 and blob\n\n    reader.onloadend = () => {\n      this.setState({\n        image: file,\n        imagePreviewUrl: reader.result\n      });\n    };\n\n    reader.readAsDataURL(file);\n  } //* Create new location\n\n\n  createLocation(event) {\n    //*  Stop Form button behavior\n    event.preventDefault(); // //* Check if all fields are filled\n    // if (\n    //   this.state.title === '' ||\n    //   this.state.street === '' ||\n    //   this.state.zip === '' ||\n    //   this.state.city === ''\n    // ) {\n    //   //* Not all fields filed show Alert\n    //   this.setState({ showAlertRequiredFields: true });\n    //   window.setTimeout(() => {\n    //     this.setState({ showAlertRequiredFields: false });\n    //   }, 5000);\n    // } else {\n    //   const newLocation = {\n    //     title: this.state.title,\n    //     street: this.state.street,\n    //     streetNumber: this.state.streetNumber,\n    //     zip: this.state.zip,\n    //     city: this.state.city,\n    //     text: this.state.text,\n    //   };\n    //   this.props.createProject(newLocation, this.props.history);\n    //   // this.props.history.push('/');\n    // }\n\n    const newLocation = {\n      title: this.state.title,\n      street: this.state.street,\n      streetNumber: this.state.streetNumber,\n      zip: this.state.zip,\n      city: this.state.city,\n      text: this.state.text\n    };\n    this.props.createProject(newLocation, this.props.history);\n  }\n\n  render() {\n    const errors = this.state.errors; //* Set image preview from state\n\n    let imagePreviewUrl = this.state.imagePreviewUrl;\n    let $imagePreview = null; //* Create HTML img element with loaded image and show preview if exist\n\n    if (imagePreviewUrl) {\n      $imagePreview = React.createElement(\"img\", {\n        src: imagePreviewUrl,\n        alt: this.state.imageName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      });\n    } else {\n      $imagePreview = React.createElement(\"div\", {\n        className: \"previewText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"section\", {\n      className: \"create-location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, errors.title), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"d-flex justify-content-center pb-4 pt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Create New Location\"), this.state.showAlertRequiredFields && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Och noo something is wrong with yours required fields.\"), React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group pt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      className: \"form-control\",\n      placeholder: \"Title\",\n      required: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group pt-2 pb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"street\",\n      className: \"form-control\",\n      placeholder: \"Street\",\n      required: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group pt-2 pb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"streetNumber\",\n      className: \"form-control\",\n      placeholder: \"Street Number\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group pt-2 pb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"zip\",\n      className: \"form-control\",\n      placeholder: \"Zip\",\n      required: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group pt-2 pb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"city\",\n      className: \"form-control\",\n      placeholder: \"City\",\n      required: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      name: \"text\",\n      className: \"form-control\",\n      placeholder: \"Write something awesome.\",\n      rows: \"5\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"image-upload  pt-3 pb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => this._handleSubmit(e),\n      className: \"pr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"file btn  btn-outline-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Upload\", React.createElement(\"input\", {\n      type: \"file\",\n      name: \"image\",\n      onChange: e => this._handleImageChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"delete-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(MaterialIcon, {\n      icon: \"delete\",\n      color: \"#d9534f\",\n      onClick: this.deleteImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"pl-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, this.state.imageName)), React.createElement(\"div\", {\n      className: \"imgPreview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, $imagePreview)), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-danger\",\n      onClick: this.createLocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"Add\"))))));\n  }\n\n}\n\nCreateLocation.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  createProject\n})(CreateLocation);","map":{"version":3,"sources":["/Users/michalevo/Desktop/My_Code/React/location-share-app-client/location-share-app/src/components/CreateLocation.jsx"],"names":["React","Component","MaterialIcon","PropTypes","connect","createProject","CreateLocation","constructor","props","state","title","street","streetNumber","zip","city","text","image","imagePreviewUrl","imageName","showAlertRequiredFields","errors","handleChange","bind","deleteImage","createLocation","componentWillReceiveProps","nextProps","setState","event","target","name","value","_handleSubmit","preventDefault","console","log","_handleImageChange","reader","FileReader","file","files","onloadend","result","readAsDataURL","newLocation","history","render","$imagePreview","e","propTypes","func","isRequired","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AAEA,OAAO,8CAAP;;AAEA,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AACrCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,MAAM,EAAE,EAFG;AAGXC,MAAAA,YAAY,EAAE,EAHH;AAIXC,MAAAA,GAAG,EAAE,EAJM;AAKXC,MAAAA,IAAI,EAAE,EALK;AAMXC,MAAAA,IAAI,EAAE,EANK;AAOXC,MAAAA,KAAK,EAAE,EAPI;AAQXC,MAAAA,eAAe,EAAE,EARN;AASXC,MAAAA,SAAS,EAAE,EATA;AAUXC,MAAAA,uBAAuB,EAAE,KAVd;AAWXC,MAAAA,MAAM,EAAE;AAXG,KAAb,CAFiB,CAgBjB;;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,cAAL,GAAsB,KAAKA,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAtB;AACD,GArBoC,CAuBrC;;;AACAG,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAIA,SAAS,CAACN,MAAd,EAAsB;AACpB,WAAKO,QAAL,CAAc;AAAEP,QAAAA,MAAM,EAAEM,SAAS,CAACN;AAApB,OAAd;AACD;AACF,GA5BoC,CA8BrC;;;AACAC,EAAAA,YAAY,CAACO,KAAD,EAAQ;AAClB;AACA,SAAKD,QAAL,CAAc;AACZ,OAACC,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AADtB,KAAd;AAGD,GApCoC,CAsCrC;;;AACAR,EAAAA,WAAW,GAAG;AACZ,SAAKI,QAAL,CAAc;AAAEV,MAAAA,eAAe,EAAE,EAAnB;AAAuBC,MAAAA,SAAS,EAAE,EAAlC;AAAsCF,MAAAA,KAAK,EAAE;AAA7C,KAAd;AACD,GAzCoC,CA2CrC;;;AACAgB,EAAAA,aAAa,CAACJ,KAAD,EAAQ;AACnBA,IAAAA,KAAK,CAACK,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,KAAK1B,KAAL,CAAWO,KAA3C;AACD,GA/CoC,CAiDrC;;;AACAoB,EAAAA,kBAAkB,CAACR,KAAD,EAAQ;AACxBA,IAAAA,KAAK,CAACK,cAAN,GADwB,CAGxB;;AACA,QAAII,MAAM,GAAG,IAAIC,UAAJ,EAAb,CAJwB,CAKxB;;AACA,QAAIC,IAAI,GAAGX,KAAK,CAACC,MAAN,CAAaW,KAAb,CAAmB,CAAnB,CAAX,CANwB,CAQxB;;AACA,SAAKb,QAAL,CAAc;AAAET,MAAAA,SAAS,EAAEqB,IAAI,CAACT;AAAlB,KAAd,EATwB,CAWxB;;AACAO,IAAAA,MAAM,CAACI,SAAP,GAAmB,MAAM;AACvB,WAAKd,QAAL,CAAc;AACZX,QAAAA,KAAK,EAAEuB,IADK;AAEZtB,QAAAA,eAAe,EAAEoB,MAAM,CAACK;AAFZ,OAAd;AAID,KALD;;AAOAL,IAAAA,MAAM,CAACM,aAAP,CAAqBJ,IAArB;AACD,GAtEoC,CAwErC;;;AACAf,EAAAA,cAAc,CAACI,KAAD,EAAQ;AACpB;AACAA,IAAAA,KAAK,CAACK,cAAN,GAFoB,CAIpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AAEA,UAAMW,WAAW,GAAG;AAClBlC,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KADA;AAElBC,MAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE,MAFD;AAGlBC,MAAAA,YAAY,EAAE,KAAKH,KAAL,CAAWG,YAHP;AAIlBC,MAAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWI,GAJE;AAKlBC,MAAAA,IAAI,EAAE,KAAKL,KAAL,CAAWK,IALC;AAMlBC,MAAAA,IAAI,EAAE,KAAKN,KAAL,CAAWM;AANC,KAApB;AASA,SAAKP,KAAL,CAAWH,aAAX,CAAyBuC,WAAzB,EAAsC,KAAKpC,KAAL,CAAWqC,OAAjD;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACC1B,MADD,GACY,KAAKX,KADjB,CACCW,MADD,EAGP;;AAHO,QAIDH,eAJC,GAImB,KAAKR,KAJxB,CAIDQ,eAJC;AAKP,QAAI8B,aAAa,GAAG,IAApB,CALO,CAMP;;AACA,QAAI9B,eAAJ,EAAqB;AACnB8B,MAAAA,aAAa,GAAG;AAAK,QAAA,GAAG,EAAE9B,eAAV;AAA2B,QAAA,GAAG,EAAE,KAAKR,KAAL,CAAWS,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB;AACD,KAFD,MAEO;AACL6B,MAAAA,aAAa,GAAG;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB;AACD;;AAED,WACE;AAAS,MAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK3B,MAAM,CAACV,KAAZ,CADF,EAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,yCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAGG,KAAKD,KAAL,CAAWU,uBAAX,IACC;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAoC,MAAA,IAAI,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAJJ,EAUE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,SAAS,EAAC,cAHZ;AAIE,MAAA,WAAW,EAAC,OAJd;AAKE,MAAA,QAAQ,MALV;AAME,MAAA,QAAQ,EAAE,KAAKE,YANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,EAeE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,EAAC,cAHZ;AAIE,MAAA,WAAW,EAAC,QAJd;AAKE,MAAA,QAAQ,MALV;AAME,MAAA,QAAQ,EAAE,KAAKA,YANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAfF,EA4BE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,cAFP;AAGE,MAAA,SAAS,EAAC,cAHZ;AAIE,MAAA,WAAW,EAAC,eAJd;AAKE,MAAA,QAAQ,EAAE,KAAKA,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA5BF,EAwCE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,KAFP;AAGE,MAAA,SAAS,EAAC,cAHZ;AAIE,MAAA,WAAW,EAAC,KAJd;AAKE,MAAA,QAAQ,MALV;AAME,MAAA,QAAQ,EAAE,KAAKA,YANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAxCF,EAqDE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,SAAS,EAAC,cAHZ;AAIE,MAAA,WAAW,EAAC,MAJd;AAKE,MAAA,QAAQ,MALV;AAME,MAAA,QAAQ,EAAE,KAAKA,YANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CArDF,EAkEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,WAAW,EAAC,0BAHd;AAIE,MAAA,IAAI,EAAC,GAJP;AAKE,MAAA,QAAQ,EAAE,KAAKA,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAlEF,EA6EE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAG2B,CAAD,IAAO,KAAKhB,aAAL,CAAmBgB,CAAnB,CAAvB;AAA8C,MAAA,SAAS,EAAC,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,QAAQ,EAAGA,CAAD,IAAO,KAAKZ,kBAAL,CAAwBY,CAAxB,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF,EAaE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,OAAO,EAAE,KAAKzB,WAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqB,KAAKd,KAAL,CAAWS,SAAhC,CAFF,CAbF,EAoBE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B6B,aAA7B,CApBF,CA7EF,EAqGE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,wBAFZ;AAGE,MAAA,OAAO,EAAE,KAAKvB,cAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aArGF,CADF,CADF,CAVF,CAFF,CADF;AAgID;;AAjQoC;;AAoQvClB,cAAc,CAAC2C,SAAf,GAA2B;AACzB5C,EAAAA,aAAa,EAAEF,SAAS,CAAC+C,IAAV,CAAeC,UADL;AAEzB/B,EAAAA,MAAM,EAAEjB,SAAS,CAACiD,MAAV,CAAiBD;AAFA,CAA3B;;AAKA,MAAME,eAAe,GAAI5C,KAAD,KAAY;AAClCW,EAAAA,MAAM,EAAEX,KAAK,CAACW;AADoB,CAAZ,CAAxB;;AAIA,eAAehB,OAAO,CAACiD,eAAD,EAAkB;AAAEhD,EAAAA;AAAF,CAAlB,CAAP,CAA4CC,cAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport MaterialIcon from 'material-icons-react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProject } from '../actions/projectActions';\n\nimport '../assets/css/components/create-location.css';\n\nclass CreateLocation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      street: '',\n      streetNumber: '',\n      zip: '',\n      city: '',\n      text: '',\n      image: '',\n      imagePreviewUrl: '',\n      imageName: '',\n      showAlertRequiredFields: false,\n      errors: {},\n    };\n\n    //* Register methods\n    this.handleChange = this.handleChange.bind(this);\n    this.deleteImage = this.deleteImage.bind(this);\n    this.createLocation = this.createLocation.bind(this);\n  }\n\n  // Life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  //* Check inputs for changes\n  handleChange(event) {\n    //* Find the right state and save content from input into state\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  //*Â Delete image\n  deleteImage() {\n    this.setState({ imagePreviewUrl: '', imageName: '', image: '' });\n  }\n\n  //* Send on Server\n  _handleSubmit(event) {\n    event.preventDefault();\n    console.log('handle submit - ', this.state.image);\n  }\n\n  //* Load image\n  _handleImageChange(event) {\n    event.preventDefault();\n\n    //* Read data from HTML element\n    let reader = new FileReader();\n    //* Find image data into element\n    let file = event.target.files[0];\n\n    //* Save image name into state\n    this.setState({ imageName: file.name });\n\n    //* After added image find base64 and blob\n    reader.onloadend = () => {\n      this.setState({\n        image: file,\n        imagePreviewUrl: reader.result,\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  //* Create new location\n  createLocation(event) {\n    //*  Stop Form button behavior\n    event.preventDefault();\n\n    // //* Check if all fields are filled\n    // if (\n    //   this.state.title === '' ||\n    //   this.state.street === '' ||\n    //   this.state.zip === '' ||\n    //   this.state.city === ''\n    // ) {\n    //   //* Not all fields filed show Alert\n    //   this.setState({ showAlertRequiredFields: true });\n    //   window.setTimeout(() => {\n    //     this.setState({ showAlertRequiredFields: false });\n    //   }, 5000);\n    // } else {\n    //   const newLocation = {\n    //     title: this.state.title,\n    //     street: this.state.street,\n    //     streetNumber: this.state.streetNumber,\n    //     zip: this.state.zip,\n    //     city: this.state.city,\n    //     text: this.state.text,\n    //   };\n\n    //   this.props.createProject(newLocation, this.props.history);\n\n    //   // this.props.history.push('/');\n    // }\n\n    const newLocation = {\n      title: this.state.title,\n      street: this.state.street,\n      streetNumber: this.state.streetNumber,\n      zip: this.state.zip,\n      city: this.state.city,\n      text: this.state.text,\n    };\n\n    this.props.createProject(newLocation, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    //* Set image preview from state\n    let { imagePreviewUrl } = this.state;\n    let $imagePreview = null;\n    //* Create HTML img element with loaded image and show preview if exist\n    if (imagePreviewUrl) {\n      $imagePreview = <img src={imagePreviewUrl} alt={this.state.imageName} />;\n    } else {\n      $imagePreview = <div className=\"previewText\"></div>;\n    }\n\n    return (\n      <section className=\"create-location\">\n        <h1>{errors.title}</h1>\n        <div className=\"container\">\n          <h1 className=\"d-flex justify-content-center pb-4 pt-4\">Create New Location</h1>\n          {/* START Alert Fields are required */}\n          {this.state.showAlertRequiredFields && (\n            <div className=\"alert alert-danger\" role=\"alert\">\n              Och noo something is wrong with yours required fields.\n            </div>\n          )}\n          {/* END Alert Fields are required */}\n\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <form>\n                {/* START Title */}\n                <div className=\"form-group pt-2\">\n                  <input\n                    type=\"text\"\n                    name=\"title\"\n                    className=\"form-control\"\n                    placeholder=\"Title\"\n                    required\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {/* END Title */}\n\n                {/* START Street */}\n                <div className=\"form-group pt-2 pb-2\">\n                  <input\n                    type=\"text\"\n                    name=\"street\"\n                    className=\"form-control\"\n                    placeholder=\"Street\"\n                    required\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {/* END Street */}\n\n                {/* START Street Number */}\n                <div className=\"form-group pt-2 pb-2\">\n                  <input\n                    type=\"text\"\n                    name=\"streetNumber\"\n                    className=\"form-control\"\n                    placeholder=\"Street Number\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {/* END Street Number */}\n\n                {/* START Zip */}\n                <div className=\"form-group pt-2 pb-2\">\n                  <input\n                    type=\"text\"\n                    name=\"zip\"\n                    className=\"form-control\"\n                    placeholder=\"Zip\"\n                    required\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {/* END Zip */}\n\n                {/* START City */}\n                <div className=\"form-group pt-2 pb-2\">\n                  <input\n                    type=\"text\"\n                    name=\"city\"\n                    className=\"form-control\"\n                    placeholder=\"City\"\n                    required\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {/* END City*/}\n\n                {/* START Textarea */}\n                <div className=\"form-group\">\n                  <textarea\n                    name=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Write something awesome.\"\n                    rows=\"5\"\n                    onChange={this.handleChange}></textarea>\n                </div>\n                {/* END Textarea */}\n\n                {/* START Image upload */}\n                <div className=\"image-upload  pt-3 pb-5\">\n                  <form onSubmit={(e) => this._handleSubmit(e)} className=\"pr-5\">\n                    <div className=\"file btn  btn-outline-primary\">\n                      Upload\n                      <input\n                        type=\"file\"\n                        name=\"image\"\n                        onChange={(e) => this._handleImageChange(e)}\n                      />\n                    </div>\n                  </form>\n\n                  {/* START Delete icon */}\n                  <div className=\"delete-icon\">\n                    <MaterialIcon icon=\"delete\" color=\"#d9534f\" onClick={this.deleteImage} />\n                    <p className=\"pl-3\">{this.state.imageName}</p>\n                  </div>\n                  {/* END Delete icon */}\n\n                  {/* Show loaded image as preview */}\n                  <div className=\"imgPreview\">{$imagePreview}</div>\n                </div>\n                {/* END Image upload */}\n\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-outline-danger\"\n                  onClick={this.createLocation}>\n                  Add\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nCreateLocation.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { createProject })(CreateLocation);\n"]},"metadata":{},"sourceType":"module"}