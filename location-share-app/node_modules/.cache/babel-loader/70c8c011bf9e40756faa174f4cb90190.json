{"ast":null,"code":"class AuthenticationController {\n  // Remove data from SessionStorage after time is gone\n  // It's because -> showing Logout Component\n  logout() {\n    window.setTimeout(() => {\n      sessionStorage.removeItem('jwtToken');\n    }, 1000);\n  } // Check if user is logged in\n  // Check SessionStorage and if find data @return true\n\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('jwtToken');\n\n    if (user === null) {\n      return false;\n    }\n\n    return true;\n  }\n\n}\n\nexport default new AuthenticationController();","map":{"version":3,"sources":["/Users/michalevo/Desktop/My_Code/React/location-share-app-client/location-share-app/src/controllers/AuthenticationController.js"],"names":["AuthenticationController","logout","window","setTimeout","sessionStorage","removeItem","isUserLoggedIn","user","getItem"],"mappings":"AAAA,MAAMA,wBAAN,CAA+B;AAC7B;AACA;AACAC,EAAAA,MAAM,GAAG;AACPC,IAAAA,MAAM,CAACC,UAAP,CAAkB,MAAM;AACtBC,MAAAA,cAAc,CAACC,UAAf,CAA0B,UAA1B;AACD,KAFD,EAEG,IAFH;AAGD,GAP4B,CAS7B;AACA;;;AACAC,EAAAA,cAAc,GAAG;AACf,QAAIC,IAAI,GAAGH,cAAc,CAACI,OAAf,CAAuB,UAAvB,CAAX;;AACA,QAAID,IAAI,KAAK,IAAb,EAAmB;AACjB,aAAO,KAAP;AACD;;AAED,WAAO,IAAP;AACD;;AAlB4B;;AAqB/B,eAAe,IAAIP,wBAAJ,EAAf","sourcesContent":["class AuthenticationController {\n  // Remove data from SessionStorage after time is gone\n  // It's because -> showing Logout Component\n  logout() {\n    window.setTimeout(() => {\n      sessionStorage.removeItem('jwtToken');\n    }, 1000);\n  }\n\n  // Check if user is logged in\n  // Check SessionStorage and if find data @return true\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('jwtToken');\n    if (user === null) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\nexport default new AuthenticationController();\n"]},"metadata":{},"sourceType":"module"}