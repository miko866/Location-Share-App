{"ast":null,"code":"var _jsxFileName = \"/Users/michalevo/Desktop/My_Code/React/location-share-app-client/location-share-app/src/components/LocationCard.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthenticationController from '../controllers/AuthenticationController';\nimport { connect } from 'react-redux';\nimport { getPosts, deletePost } from '../actions/projectActions';\nimport PropTypes from 'prop-types';\nimport '../assets/css/components/location-card.css';\n\nclass LocationCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAlert: false\n    }; //* Register methods\n\n    this.showMap = this.showMap.bind(this);\n    this.editLocation = this.editLocation.bind(this);\n    this.onDeleteClick = this.onDeleteClick.bind(this);\n  }\n\n  onDeleteClick(id) {\n    this.props.deletePost(id);\n  }\n\n  showMap(street, streetNumber, zip, city) {\n    let address = street + ' ' + streetNumber + ' ' + zip + ' ' + city;\n    sessionStorage.setItem('address', address); //* Redirect to Map with address from card\n\n    this.props.history.push('/map');\n  } //* Hard reload\n\n\n  componentDidMount() {\n    this.props.getPosts();\n  }\n\n  editLocation() {\n    this.props.history.push('/editPost/:id');\n  }\n\n  render() {\n    const posts = this.props.post.posts;\n    console.log('Posts Props', posts); //* Variable with Auth method\n    //* Check if user is logged in\n\n    const isUserLoggedIn = AuthenticationController.isUserLoggedIn();\n    return React.createElement(\"section\", {\n      className: \"location-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, posts.map(item => React.createElement(\"div\", {\n      className: \"card\",\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, item.title), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, item.street, \" \", item.streetNumber, \" \", item.zip, \" \", item.city), React.createElement(\"div\", {\n      className: \"location-card__author pb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/author/{id}\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, item.postAuthor)), React.createElement(\"p\", {\n      className: \"card-text pb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, item.text), React.createElement(\"div\", {\n      to: \"/map\",\n      className: \"btn btn-outline-danger text-danger mr-4\",\n      onClick: () => this.showMap(item.street, item.streetNumber, item.zip, item.city),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"View on Map\"), isUserLoggedIn && React.createElement(Link, {\n      to: `/editPost/${item.id}`,\n      className: \"btn btn-outline-primary text-primary mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Edit\"), isUserLoggedIn && React.createElement(\"div\", {\n      className: \"btn btn-link text-danger\",\n      onClick: () => this.onDeleteClick(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Delete\"))))));\n  }\n\n} // LocationCard.propsTypes = {\n//   post: PropTypes.object.isRequired,\n//   getPosts: PropTypes.func.isRequired,\n//   deletePost: PropTypes.func.isRequired,\n// };\n// const mapStateToProps = (state) => ({\n//   post: state.post,\n// });\n\n\nexport default LocationCard;","map":{"version":3,"sources":["/Users/michalevo/Desktop/My_Code/React/location-share-app-client/location-share-app/src/components/LocationCard.jsx"],"names":["React","Component","Link","AuthenticationController","connect","getPosts","deletePost","PropTypes","LocationCard","constructor","props","state","showAlert","showMap","bind","editLocation","onDeleteClick","id","street","streetNumber","zip","city","address","sessionStorage","setItem","history","push","componentDidMount","render","posts","post","console","log","isUserLoggedIn","map","item","title","postAuthor","text"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthenticationController from '../controllers/AuthenticationController';\nimport { connect } from 'react-redux';\nimport { getPosts, deletePost } from '../actions/projectActions';\nimport PropTypes from 'prop-types';\n\nimport '../assets/css/components/location-card.css';\n\nclass LocationCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAlert: false,\n    };\n\n    //* Register methods\n    this.showMap = this.showMap.bind(this);\n    this.editLocation = this.editLocation.bind(this);\n    this.onDeleteClick = this.onDeleteClick.bind(this);\n  }\n\n  onDeleteClick(id) {\n    this.props.deletePost(id);\n  }\n\n  showMap(street, streetNumber, zip, city) {\n    let address = street + ' ' + streetNumber + ' ' + zip + ' ' + city;\n    sessionStorage.setItem('address', address);\n\n    //* Redirect to Map with address from card\n    this.props.history.push('/map');\n  }\n\n  //* Hard reload\n  componentDidMount() {\n    this.props.getPosts();\n  }\n\n  editLocation() {\n    this.props.history.push('/editPost/:id');\n  }\n\n  render() {\n    const { posts } = this.props.post;\n\n    console.log('Posts Props', posts);\n\n    //* Variable with Auth method\n    //* Check if user is logged in\n    const isUserLoggedIn = AuthenticationController.isUserLoggedIn();\n\n    return (\n      <section className=\"location-card\">\n        <div className=\"container\">\n          {/* Render Cards from bully data */}\n          {posts.map((item) => (\n            <div className=\"card\" key={item.id}>\n              {/* <img\n                src={require(`../assets/img/${item.image}`)}\n                className=\"card-img-top\"\n                alt={item.title}\n              /> */}\n              <div className=\"card-body\">\n                <h2 className=\"card-title\">{item.title}</h2>\n                <h5>\n                  {item.street} {item.streetNumber} {item.zip} {item.city}\n                </h5>\n                <div className=\"location-card__author pb-3\">\n                  <Link to=\"/author/{id}\">{item.postAuthor}</Link>\n                </div>\n                <p className=\"card-text pb-3\">{item.text}</p>\n                <div\n                  to=\"/map\"\n                  className=\"btn btn-outline-danger text-danger mr-4\"\n                  onClick={() => this.showMap(item.street, item.streetNumber, item.zip, item.city)}>\n                  View on Map\n                </div>\n\n                {/* Only Logged user can see that */}\n                {isUserLoggedIn && (\n                  <Link\n                    to={`/editPost/${item.id}`}\n                    className=\"btn btn-outline-primary text-primary mr-5\">\n                    Edit\n                  </Link>\n                )}\n                {isUserLoggedIn && (\n                  <div\n                    className=\"btn btn-link text-danger\"\n                    onClick={() => this.onDeleteClick(item.id)}>\n                    Delete\n                  </div>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      </section>\n    );\n  }\n}\n\n// LocationCard.propsTypes = {\n//   post: PropTypes.object.isRequired,\n//   getPosts: PropTypes.func.isRequired,\n//   deletePost: PropTypes.func.isRequired,\n// };\n\n// const mapStateToProps = (state) => ({\n//   post: state.post,\n// });\n\nexport default LocationCard;\n"]},"metadata":{},"sourceType":"module"}