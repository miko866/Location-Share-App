{"ast":null,"code":"var _jsxFileName = \"/Users/michalevo/Desktop/My_Code/React/location-share-app-client/location-share-app/src/components/EditLocation.jsx\";\nimport React, { Component } from 'react';\nimport MaterialIcon from 'material-icons-react';\nimport { getPost, createPost } from '../actions/projectActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\n\nclass EditLocation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params,\n      title: '',\n      street: '',\n      streetNumber: '',\n      zip: '',\n      city: '',\n      text: '',\n      image: '',\n      imagePreviewUrl: '',\n      imageName: '',\n      showAlertRequiredFields: false,\n      errors: {}\n    }; //* Register methods\n\n    this.handleChange = this.handleChange.bind(this);\n    this.deleteImage = this.deleteImage.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const _nextProps$post = nextProps.post,\n          id = _nextProps$post.id,\n          title = _nextProps$post.title,\n          street = _nextProps$post.street,\n          streetNumber = _nextProps$post.streetNumber,\n          zip = _nextProps$post.zip,\n          city = _nextProps$post.city,\n          text = _nextProps$post.text;\n    this.setState({\n      id,\n      title,\n      street,\n      streetNumber,\n      zip,\n      city,\n      text\n    });\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.props.getPost(id, this.props.history);\n  } //* Check inputs for changes\n\n\n  handleChange(event) {\n    //* Find the right state and save content from input into state\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    const editPost = {\n      id: this.state.id,\n      title: this.state.title,\n      street: this.state.street,\n      streetNumber: this.state.streetNumber,\n      zip: this.state.zip,\n      city: this.state.city,\n      text: this.state.text\n    };\n  } //*Â Delete image\n\n\n  deleteImage() {\n    this.setState({\n      imagePreviewUrl: '',\n      imageName: '',\n      image: ''\n    });\n  } //* Send on Server\n\n\n  _handleSubmit(event) {\n    event.preventDefault();\n    console.log('handle submit - ', this.state.image);\n  } //* Load image\n\n\n  _handleImageChange(event) {\n    event.preventDefault(); //* Read data from HTML element\n\n    let reader = new FileReader(); //* Find image data into element\n\n    let file = event.target.files[0]; //* Save image name into state\n\n    this.setState({\n      imageName: file.name\n    }); //* After added image find base64 and blob\n\n    reader.onloadend = () => {\n      this.setState({\n        image: file,\n        imagePreviewUrl: reader.result\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  render() {\n    //* Set image preview from state\n    let imagePreviewUrl = this.state.imagePreviewUrl;\n    let $imagePreview = null; //* Create HTML img element with loaded image and show preview if exist\n\n    if (imagePreviewUrl) {\n      $imagePreview = React.createElement(\"img\", {\n        src: imagePreviewUrl,\n        alt: this.state.imageName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      });\n    } else {\n      $imagePreview = React.createElement(\"div\", {\n        className: \"previewText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"section\", {\n      className: \"create-location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"d-flex justify-content-center pb-4 pt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Edit Location\"), React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group pt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      className: \"form-control\",\n      placeholder: \"Title\",\n      value: this.state.title,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group pt-2 pb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"street\",\n      className: \"form-control\",\n      placeholder: \"Street\",\n      value: this.state.street,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group pt-2 pb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"streetNumber\",\n      className: \"form-control\",\n      placeholder: \"Street Number\",\n      value: this.state.streetNumber,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group pt-2 pb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"zip\",\n      className: \"form-control\",\n      placeholder: \"Zip\",\n      disabled: true,\n      value: this.state.zip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group pt-2 pb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"city\",\n      className: \"form-control\",\n      placeholder: \"City\",\n      disabled: true,\n      value: this.state.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      name: \"text\",\n      className: \"form-control\",\n      placeholder: \"Write something awesome.\",\n      rows: \"5\",\n      value: this.state.text,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"image-upload  pt-3 pb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => this._handleSubmit(e),\n      className: \"pr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"file btn  btn-outline-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Upload\", React.createElement(\"input\", {\n      type: \"file\",\n      name: \"image\",\n      onChange: e => this._handleImageChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"delete-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(MaterialIcon, {\n      icon: \"delete\",\n      color: \"#d9534f\",\n      onClick: this.deleteImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"pl-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, this.state.imageName)), React.createElement(\"div\", {\n      className: \"imgPreview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, $imagePreview)), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Edit\"))))));\n  }\n\n}\n\nEditLocation.protoTypes = {\n  getPost: PropTypes.func.isRequired,\n  createPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost,\n  createPost\n})(EditLocation);","map":{"version":3,"sources":["/Users/michalevo/Desktop/My_Code/React/location-share-app-client/location-share-app/src/components/EditLocation.jsx"],"names":["React","Component","MaterialIcon","getPost","createPost","PropTypes","connect","classnames","EditLocation","constructor","props","state","id","match","params","title","street","streetNumber","zip","city","text","image","imagePreviewUrl","imageName","showAlertRequiredFields","errors","handleChange","bind","deleteImage","componentWillReceiveProps","nextProps","post","setState","componentDidMount","history","event","target","name","value","onSubmit","preventDefault","editPost","_handleSubmit","console","log","_handleImageChange","reader","FileReader","file","files","onloadend","result","readAsDataURL","render","$imagePreview","e","protoTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MaterialIcon from 'material-icons-react';\nimport { getPost, createPost } from '../actions/projectActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\n\nclass EditLocation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params,\n      title: '',\n      street: '',\n      streetNumber: '',\n      zip: '',\n      city: '',\n      text: '',\n      image: '',\n      imagePreviewUrl: '',\n      imageName: '',\n      showAlertRequiredFields: false,\n      errors: {},\n    };\n    //* Register methods\n    this.handleChange = this.handleChange.bind(this);\n    this.deleteImage = this.deleteImage.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { id, title, street, streetNumber, zip, city, text } = nextProps.post;\n\n    this.setState({\n      id,\n      title,\n      street,\n      streetNumber,\n      zip,\n      city,\n      text,\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getPost(id, this.props.history);\n  }\n\n  //* Check inputs for changes\n  handleChange(event) {\n    //* Find the right state and save content from input into state\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n\n    const editPost = {\n      id: this.state.id,\n      title: this.state.title,\n      street: this.state.street,\n      streetNumber: this.state.streetNumber,\n      zip: this.state.zip,\n      city: this.state.city,\n      text: this.state.text,\n    };\n  }\n\n  //*Â Delete image\n  deleteImage() {\n    this.setState({ imagePreviewUrl: '', imageName: '', image: '' });\n  }\n\n  //* Send on Server\n  _handleSubmit(event) {\n    event.preventDefault();\n    console.log('handle submit - ', this.state.image);\n  }\n\n  //* Load image\n  _handleImageChange(event) {\n    event.preventDefault();\n\n    //* Read data from HTML element\n    let reader = new FileReader();\n    //* Find image data into element\n    let file = event.target.files[0];\n\n    //* Save image name into state\n    this.setState({ imageName: file.name });\n\n    //* After added image find base64 and blob\n    reader.onloadend = () => {\n      this.setState({\n        image: file,\n        imagePreviewUrl: reader.result,\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  render() {\n    //* Set image preview from state\n    let { imagePreviewUrl } = this.state;\n    let $imagePreview = null;\n    //* Create HTML img element with loaded image and show preview if exist\n    if (imagePreviewUrl) {\n      $imagePreview = <img src={imagePreviewUrl} alt={this.state.imageName} />;\n    } else {\n      $imagePreview = <div className=\"previewText\"></div>;\n    }\n\n    return (\n      <section className=\"create-location\">\n        <div className=\"container\">\n          <h1 className=\"d-flex justify-content-center pb-4 pt-4\">Edit Location</h1>\n\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <form>\n                {/* START Title */}\n                <div className=\"form-group pt-2\">\n                  <input\n                    type=\"text\"\n                    name=\"title\"\n                    className=\"form-control\"\n                    placeholder=\"Title\"\n                    value={this.state.title}\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {/* END Title */}\n\n                {/* START Street */}\n                <div className=\"form-group pt-2 pb-2\">\n                  <input\n                    type=\"text\"\n                    name=\"street\"\n                    className=\"form-control\"\n                    placeholder=\"Street\"\n                    value={this.state.street}\n                    disabled\n                  />\n                </div>\n                {/* END Street */}\n\n                {/* START Street Number */}\n                <div className=\"form-group pt-2 pb-2\">\n                  <input\n                    type=\"text\"\n                    name=\"streetNumber\"\n                    className=\"form-control\"\n                    placeholder=\"Street Number\"\n                    value={this.state.streetNumber}\n                    disabled\n                  />\n                </div>\n                {/* END Street Number */}\n\n                {/* START Zip */}\n                <div className=\"form-group pt-2 pb-2\">\n                  <input\n                    type=\"text\"\n                    name=\"zip\"\n                    className=\"form-control\"\n                    placeholder=\"Zip\"\n                    disabled\n                    value={this.state.zip}\n                  />\n                </div>\n                {/* END Zip */}\n\n                {/* START City */}\n                <div className=\"form-group pt-2 pb-2\">\n                  <input\n                    type=\"text\"\n                    name=\"city\"\n                    className=\"form-control\"\n                    placeholder=\"City\"\n                    disabled\n                    value={this.state.city}\n                  />\n                </div>\n                {/* END City*/}\n\n                {/* START Textarea */}\n                <div className=\"form-group\">\n                  <textarea\n                    name=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Write something awesome.\"\n                    rows=\"5\"\n                    value={this.state.text}\n                    onChange={this.handleChange}></textarea>\n                </div>\n                {/* END Textarea */}\n\n                {/* START Image upload */}\n                <div className=\"image-upload  pt-3 pb-5\">\n                  <form onSubmit={(e) => this._handleSubmit(e)} className=\"pr-5\">\n                    <div className=\"file btn  btn-outline-primary\">\n                      Upload\n                      <input\n                        type=\"file\"\n                        name=\"image\"\n                        onChange={(e) => this._handleImageChange(e)}\n                      />\n                    </div>\n                  </form>\n\n                  {/* START Delete icon */}\n                  <div className=\"delete-icon\">\n                    <MaterialIcon icon=\"delete\" color=\"#d9534f\" onClick={this.deleteImage} />\n                    <p className=\"pl-3\">{this.state.imageName}</p>\n                  </div>\n                  {/* END Delete icon */}\n\n                  {/* Show loaded image as preview */}\n                  <div className=\"imgPreview\">{$imagePreview}</div>\n                </div>\n                {/* END Image upload */}\n\n                <button type=\"submit\" className=\"btn btn-outline-danger\">\n                  Edit\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nEditLocation.protoTypes = {\n  getPost: PropTypes.func.isRequired,\n  createPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post.post,\n});\n\nexport default connect(mapStateToProps, { getPost, createPost })(EditLocation);\n"]},"metadata":{},"sourceType":"module"}