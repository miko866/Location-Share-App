{"ast":null,"code":"import axios from 'axios';\nimport { GET_ERRORS, GET_POSTS, GET_POST, DELETE_POST, GET_POST_BY_AUTHOR } from './types'; //* Create new post in CreateLocation component\n\nexport const createPost = (project, history) => async dispatch => {\n  try {\n    // Connection to Server\n    const res = await axios.post('/api/posts', project);\n    history.push('/');\n  } catch (error) {\n    // Save errors into redux\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n}; //* Show all posts in LocationCard component\n\nexport const getPosts = () => async dispatch => {\n  // Connection to Server\n  const res = await axios.get('/api/posts/allPosts'); // Save errors into redux\n\n  dispatch({\n    type: GET_POSTS,\n    payload: res.data\n  });\n};\nexport const getUsers = () => async dispatch => {\n  const res = await axios.get('/api/users/allUsers');\n  dispatch({\n    type: GET_USERS,\n    payload: res.data\n  });\n};\nexport const getPostsByAuthor = () => async dispatch => {\n  const res = await axios.get(`/api/posts/allPostsByAuthor`);\n  dispatch({\n    type: GET_POST_BY_AUTHOR,\n    payload: res.data\n  });\n};\nexport const getPost = (id, history) => async dispatch => {\n  const res = await axios.get(`/api/posts/${id}`);\n  dispatch({\n    type: GET_POST,\n    payload: res.data\n  });\n};\nexport const deletePost = id => async dispatch => {\n  if (window.confirm('Are you sure?')) {\n    await axios.delete(`/api/posts/deletePost/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n  }\n};","map":{"version":3,"sources":["/Users/michalevo/Desktop/My_Code/React/location-share-app-client/location-share-app/src/actions/projectActions.js"],"names":["axios","GET_ERRORS","GET_POSTS","GET_POST","DELETE_POST","GET_POST_BY_AUTHOR","createPost","project","history","dispatch","res","post","push","error","type","payload","response","data","getPosts","get","getUsers","GET_USERS","getPostsByAuthor","getPost","id","deletePost","window","confirm","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,EAA0CC,WAA1C,EAAuDC,kBAAvD,QAAiF,SAAjF,C,CAEA;;AACA,OAAO,MAAMC,UAAU,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsB,MAAOC,QAAP,IAAoB;AAClE,MAAI;AACF;AACA,UAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAW,YAAX,EAAyBJ,OAAzB,CAAlB;AACAC,IAAAA,OAAO,CAACI,IAAR,CAAa,GAAb;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd;AACAJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEb,UADC;AAEPc,MAAAA,OAAO,EAAEF,KAAK,CAACG,QAAN,CAAeC;AAFjB,KAAD,CAAR;AAID;AACF,CAZM,C,CAcP;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOT,QAAP,IAAoB;AAChD;AACA,QAAMC,GAAG,GAAG,MAAMV,KAAK,CAACmB,GAAN,CAAU,qBAAV,CAAlB,CAFgD,CAGhD;;AACAV,EAAAA,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEZ,SADC;AAEPa,IAAAA,OAAO,EAAEL,GAAG,CAACO;AAFN,GAAD,CAAR;AAID,CARM;AAUP,OAAO,MAAMG,QAAQ,GAAG,MAAM,MAAOX,QAAP,IAAoB;AAChD,QAAMC,GAAG,GAAG,MAAMV,KAAK,CAACmB,GAAN,CAAU,qBAAV,CAAlB;AACAV,EAAAA,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEO,SADC;AAEPN,IAAAA,OAAO,EAAEL,GAAG,CAACO;AAFN,GAAD,CAAR;AAID,CANM;AAQP,OAAO,MAAMK,gBAAgB,GAAG,MAAM,MAAOb,QAAP,IAAoB;AACxD,QAAMC,GAAG,GAAG,MAAMV,KAAK,CAACmB,GAAN,CAAW,6BAAX,CAAlB;AACAV,EAAAA,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAET,kBADC;AAEPU,IAAAA,OAAO,EAAEL,GAAG,CAACO;AAFN,GAAD,CAAR;AAID,CANM;AAQP,OAAO,MAAMM,OAAO,GAAG,CAACC,EAAD,EAAKhB,OAAL,KAAiB,MAAOC,QAAP,IAAoB;AAC1D,QAAMC,GAAG,GAAG,MAAMV,KAAK,CAACmB,GAAN,CAAW,cAAaK,EAAG,EAA3B,CAAlB;AACAf,EAAAA,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEX,QADC;AAEPY,IAAAA,OAAO,EAAEL,GAAG,CAACO;AAFN,GAAD,CAAR;AAID,CANM;AAQP,OAAO,MAAMQ,UAAU,GAAID,EAAD,IAAQ,MAAOf,QAAP,IAAoB;AACpD,MAAIiB,MAAM,CAACC,OAAP,CAAe,eAAf,CAAJ,EAAqC;AACnC,UAAM3B,KAAK,CAAC4B,MAAN,CAAc,yBAAwBJ,EAAG,EAAzC,CAAN;AACAf,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEV,WADC;AAEPW,MAAAA,OAAO,EAAES;AAFF,KAAD,CAAR;AAID;AACF,CARM","sourcesContent":["import axios from 'axios';\nimport { GET_ERRORS, GET_POSTS, GET_POST, DELETE_POST, GET_POST_BY_AUTHOR } from './types';\n\n//* Create new post in CreateLocation component\nexport const createPost = (project, history) => async (dispatch) => {\n  try {\n    // Connection to Server\n    const res = await axios.post('/api/posts', project);\n    history.push('/');\n  } catch (error) {\n    // Save errors into redux\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\n//* Show all posts in LocationCard component\nexport const getPosts = () => async (dispatch) => {\n  // Connection to Server\n  const res = await axios.get('/api/posts/allPosts');\n  // Save errors into redux\n  dispatch({\n    type: GET_POSTS,\n    payload: res.data,\n  });\n};\n\nexport const getUsers = () => async (dispatch) => {\n  const res = await axios.get('/api/users/allUsers');\n  dispatch({\n    type: GET_USERS,\n    payload: res.data,\n  });\n};\n\nexport const getPostsByAuthor = () => async (dispatch) => {\n  const res = await axios.get(`/api/posts/allPostsByAuthor`);\n  dispatch({\n    type: GET_POST_BY_AUTHOR,\n    payload: res.data,\n  });\n};\n\nexport const getPost = (id, history) => async (dispatch) => {\n  const res = await axios.get(`/api/posts/${id}`);\n  dispatch({\n    type: GET_POST,\n    payload: res.data,\n  });\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  if (window.confirm('Are you sure?')) {\n    await axios.delete(`/api/posts/deletePost/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}