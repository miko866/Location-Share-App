{"ast":null,"code":"var _jsxFileName = \"/Users/michalevo/Desktop/My_Code/React/location-share-app-client/location-share-app/src/components/SinginComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport MaterialIcon from 'material-icons-react';\nimport { createNewUser } from '../actions/securityActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\n\nclass SinginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      userName: '',\n      password: '',\n      confirmPassword: '',\n      file: '',\n      imagePreviewUrl: '',\n      imageName: '',\n      showAlertRequiredFields: false,\n      showAlertPassword: false,\n      errors: {}\n    }; //* Register methods\n\n    this.handleChange = this.handleChange.bind(this);\n    this.deleteImage = this.deleteImage.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        error: nextProps.error\n      });\n    }\n  } //* Check inputs for changes\n\n\n  handleChange(event) {\n    //* Find the right state and save content from input into state\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  } //*Â Delete image\n\n\n  deleteImage() {\n    this.setState({\n      imagePreviewUrl: '',\n      imageName: '',\n      file: ''\n    });\n  } //* Send on Server\n\n\n  _handleSubmit(event) {\n    event.preventDefault();\n    console.log('handle submit - ', this.state.file);\n  } //* Load image\n\n\n  _handleImageChange(event) {\n    event.preventDefault(); //* Read data from HTML element\n\n    let reader = new FileReader(); //* Find image data into element\n\n    let file = event.target.files[0]; //* Save image name into state\n\n    this.setState({\n      imageName: file.name\n    }); //* After added image find base64 and blob\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result\n      });\n    };\n\n    reader.readAsDataURL(file);\n  } //* Create new user\n\n\n  onSubmit(event) {\n    //*  Stop button behavior\n    event.preventDefault();\n    const newUser = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      userName: this.state.userName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n    this.props.createNewUser(newUser, this.props.history); // //* Check if all fields are filled\n    // if (\n    //   this.state.firstName === '' ||\n    //   this.state.lastName === '' ||\n    //   this.state.userName === '' ||\n    //   this.state.password === '' ||\n    //   this.state.confirmPassword === ''\n    // ) {\n    //   //* Not all fields filed show Alert\n    //   this.setState({ showAlertRequiredFields: true });\n    //   window.setTimeout(() => {\n    //     this.setState({ showAlertRequiredFields: false });\n    //   }, 5000);\n    // }\n    // //* Compare password for matching\n    // else if (this.state.password !== this.state.confirmPassword) {\n    //   //* There are not matching show alert\n    //   this.setState({ showAlertPassword: true });\n    //   window.setTimeout(() => {\n    //     this.setState({ showAlertPassword: false });\n    //   }, 5000);\n    // } else {\n    //   //* All is good gone create new record in SessionStorage\n    //   sessionStorage.setItem('authenticatedEmail', this.state.userName);\n    //   sessionStorage.setItem('authenticatedPassword', this.state.password);\n    //   //* Redirect to Dashboard\n    //   this.props.history.push('/');\n    // }\n  }\n\n  render() {\n    const errors = this.state.errors; //* Set image preview from state\n\n    let imagePreviewUrl = this.state.imagePreviewUrl;\n    let $imagePreview = null; //* Create HTML img element with loaded image and show preview if exist\n\n    if (imagePreviewUrl) {\n      $imagePreview = React.createElement(\"img\", {\n        src: imagePreviewUrl,\n        alt: this.state.imageName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      });\n    } else {\n      $imagePreview = React.createElement(\"div\", {\n        className: \"previewText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"section\", {\n      className: \"singin-component\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"d-flex justify-content-center pb-4 pt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Sing In\"), this.state.showAlertRequiredFields && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Och noo something is wrong with yours required fields.\"), this.state.showAlertPassword && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Yours passwords aren't the same.\"), React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group pt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"firstName\",\n      className: classnames('form-control', {\n        'is-invalid': error.firstName\n      }),\n      placeholder: \"First Name\",\n      required: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group pt-2 pb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"lastName\",\n      className: \"form-control\",\n      placeholder: \"Last Name\",\n      required: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group pt-2 pb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      name: \"userName\",\n      className: \"form-control\",\n      placeholder: \"Email\",\n      required: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group pt-2 pb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      className: \"form-control\",\n      placeholder: \"Password\",\n      required: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group pt-2 pb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      name: \"confirmPassword\",\n      className: \"form-control\",\n      placeholder: \"Repeat Password\",\n      required: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"image-upload  pt-3 pb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => this._handleSubmit(e),\n      className: \"pr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"file btn  btn-outline-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Upload\", React.createElement(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      onChange: e => this._handleImageChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"delete-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(MaterialIcon, {\n      icon: \"delete\",\n      color: \"#d9534f\",\n      onClick: this.deleteImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"pl-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, this.state.imageName)), React.createElement(\"div\", {\n      className: \"imgPreview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, $imagePreview)), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-danger\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Create Account\"), React.createElement(Link, {\n      className: \"btn btn-link ml-5\",\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      className: \"text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"Login\")))))));\n  }\n\n}\n\nSinginComponent.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  createNewUser\n})(SinginComponent);","map":{"version":3,"sources":["/Users/michalevo/Desktop/My_Code/React/location-share-app-client/location-share-app/src/components/SinginComponent.jsx"],"names":["React","Component","Link","MaterialIcon","createNewUser","PropTypes","connect","classnames","SinginComponent","constructor","props","state","firstName","lastName","userName","password","confirmPassword","file","imagePreviewUrl","imageName","showAlertRequiredFields","showAlertPassword","errors","handleChange","bind","deleteImage","onSubmit","componentWillReceiveProps","nextProps","setState","error","event","target","name","value","_handleSubmit","preventDefault","console","log","_handleImageChange","reader","FileReader","files","onloadend","result","readAsDataURL","newUser","history","render","$imagePreview","e","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport MaterialIcon from 'material-icons-react';\nimport { createNewUser } from '../actions/securityActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nclass SinginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      userName: '',\n      password: '',\n      confirmPassword: '',\n      file: '',\n      imagePreviewUrl: '',\n      imageName: '',\n      showAlertRequiredFields: false,\n      showAlertPassword: false,\n      errors: {},\n    };\n\n    //* Register methods\n    this.handleChange = this.handleChange.bind(this);\n    this.deleteImage = this.deleteImage.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ error: nextProps.error });\n    }\n  }\n\n  //* Check inputs for changes\n  handleChange(event) {\n    //* Find the right state and save content from input into state\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  //*Â Delete image\n  deleteImage() {\n    this.setState({ imagePreviewUrl: '', imageName: '', file: '' });\n  }\n\n  //* Send on Server\n  _handleSubmit(event) {\n    event.preventDefault();\n    console.log('handle submit - ', this.state.file);\n  }\n\n  //* Load image\n  _handleImageChange(event) {\n    event.preventDefault();\n\n    //* Read data from HTML element\n    let reader = new FileReader();\n    //* Find image data into element\n    let file = event.target.files[0];\n\n    //* Save image name into state\n    this.setState({ imageName: file.name });\n\n    //* After added image find base64 and blob\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result,\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  //* Create new user\n  onSubmit(event) {\n    //*  Stop button behavior\n    event.preventDefault();\n\n    const newUser = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      userName: this.state.userName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n\n    // //* Check if all fields are filled\n    // if (\n    //   this.state.firstName === '' ||\n    //   this.state.lastName === '' ||\n    //   this.state.userName === '' ||\n    //   this.state.password === '' ||\n    //   this.state.confirmPassword === ''\n    // ) {\n    //   //* Not all fields filed show Alert\n    //   this.setState({ showAlertRequiredFields: true });\n    //   window.setTimeout(() => {\n    //     this.setState({ showAlertRequiredFields: false });\n    //   }, 5000);\n    // }\n\n    // //* Compare password for matching\n    // else if (this.state.password !== this.state.confirmPassword) {\n    //   //* There are not matching show alert\n    //   this.setState({ showAlertPassword: true });\n    //   window.setTimeout(() => {\n    //     this.setState({ showAlertPassword: false });\n    //   }, 5000);\n    // } else {\n    //   //* All is good gone create new record in SessionStorage\n    //   sessionStorage.setItem('authenticatedEmail', this.state.userName);\n    //   sessionStorage.setItem('authenticatedPassword', this.state.password);\n\n    //   //* Redirect to Dashboard\n    //   this.props.history.push('/');\n    // }\n  }\n\n  render() {\n    const { errors } = this.state;\n    //* Set image preview from state\n    let { imagePreviewUrl } = this.state;\n    let $imagePreview = null;\n    //* Create HTML img element with loaded image and show preview if exist\n    if (imagePreviewUrl) {\n      $imagePreview = <img src={imagePreviewUrl} alt={this.state.imageName} />;\n    } else {\n      $imagePreview = <div className=\"previewText\"></div>;\n    }\n\n    return (\n      <section className=\"singin-component\">\n        <div className=\"container\">\n          <h1 className=\"d-flex justify-content-center pb-4 pt-4\">Sing In</h1>\n          {/* START Alert Fields are required */}\n          {this.state.showAlertRequiredFields && (\n            <div className=\"alert alert-danger\" role=\"alert\">\n              Och noo something is wrong with yours required fields.\n            </div>\n          )}\n          {/* END Alert Fields are required */}\n\n          {/* START Alert password matching */}\n          {this.state.showAlertPassword && (\n            <div className=\"alert alert-danger\" role=\"alert\">\n              Yours passwords aren't the same.\n            </div>\n          )}\n          {/* END Alert password matching */}\n\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <form>\n                {/* START First Name */}\n                <div className=\"form-group pt-2\">\n                  <input\n                    type=\"text\"\n                    name=\"firstName\"\n                    className={classnames('form-control', { 'is-invalid': error.firstName })}\n                    placeholder=\"First Name\"\n                    required\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {/* END First Name */}\n\n                {/* START Last Name */}\n                <div className=\"form-group pt-2 pb-2\">\n                  <input\n                    type=\"text\"\n                    name=\"lastName\"\n                    className=\"form-control\"\n                    placeholder=\"Last Name\"\n                    required\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {/* END Last Name */}\n\n                {/* START UserName - Email */}\n                <div className=\"form-group pt-2 pb-2\">\n                  <input\n                    type=\"email\"\n                    name=\"userName\"\n                    className=\"form-control\"\n                    placeholder=\"Email\"\n                    required\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {/* END UserName - Email */}\n\n                {/* START Password */}\n                <div className=\"form-group pt-2 pb-2\">\n                  <input\n                    type=\"password\"\n                    name=\"password\"\n                    className=\"form-control\"\n                    placeholder=\"Password\"\n                    required\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {/* END Password */}\n\n                {/* START Password Repeat */}\n                <div className=\"form-group pt-2 pb-2\">\n                  <input\n                    type=\"password\"\n                    name=\"confirmPassword\"\n                    className=\"form-control\"\n                    placeholder=\"Repeat Password\"\n                    required\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {/* END Password repeat*/}\n\n                {/* START Image upload */}\n                <div className=\"image-upload  pt-3 pb-5\">\n                  <form onSubmit={(e) => this._handleSubmit(e)} className=\"pr-5\">\n                    <div className=\"file btn  btn-outline-primary\">\n                      Upload\n                      <input type=\"file\" name=\"file\" onChange={(e) => this._handleImageChange(e)} />\n                    </div>\n                  </form>\n\n                  {/* START Delete icon */}\n                  <div className=\"delete-icon\">\n                    <MaterialIcon icon=\"delete\" color=\"#d9534f\" onClick={this.deleteImage} />\n                    <p className=\"pl-3\">{this.state.imageName}</p>\n                  </div>\n                  {/* END Delete icon */}\n\n                  {/* Show loaded image as preview */}\n                  <div className=\"imgPreview\">{$imagePreview}</div>\n                </div>\n                {/* END Image upload */}\n\n                <button type=\"submit\" className=\"btn btn-outline-danger\" onClick={this.onSubmit}>\n                  Create Account\n                </button>\n\n                <Link className=\"btn btn-link ml-5\" to=\"/login\">\n                  <small className=\"text-primary\">Login</small>\n                </Link>\n              </form>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nSinginComponent.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\nexport default connect(mapStateToProps, { createNewUser })(SinginComponent);\n"]},"metadata":{},"sourceType":"module"}