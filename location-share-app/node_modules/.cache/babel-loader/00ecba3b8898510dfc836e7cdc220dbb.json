{"ast":null,"code":"var _jsxFileName = \"/Users/michalevo/Desktop/My_Code/React/location-share-app-client/location-share-app/src/components/UserProfile.jsx\";\nimport React, { Component } from 'react';\nimport MaterialIcon from 'material-icons-react';\nimport { createNewUser } from '../actions/securityActions';\nimport { getUser } from '../actions/projectActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames'; // Custom CSS\n\nimport '../assets/css/components/create-location.css';\n\nclass UserProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      userName: '',\n      password: '',\n      confirmPassword: '',\n      file: '',\n      imagePreviewUrl: '',\n      imageName: '',\n      errors: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.deleteImage = this.deleteImage.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  } // Check props for that post from DB per Redux\n\n\n  componentWillReceiveProps(nextProps) {\n    const _nextProps$user = nextProps.user,\n          id = _nextProps$user.id,\n          firstName = _nextProps$user.firstName,\n          lastName = _nextProps$user.lastName,\n          userName = _nextProps$user.userName,\n          password = _nextProps$user.password,\n          confirmPassword = _nextProps$user.confirmPassword;\n    this.setState({\n      id,\n      firstName,\n      lastName,\n      userName,\n      password,\n      confirmPassword\n    });\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  componentDidMount() {\n    // Find ID from URL\n    const id = this.props.match.params.id; // Take data from server\n\n    this.props.getUser(id, this.props.history);\n  } //* Check inputs for changes\n\n\n  handleChange(event) {\n    //* Find the right state and save content from input into state\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  deleteImage() {\n    this.setState({\n      imagePreviewUrl: '',\n      imageName: '',\n      file: ''\n    });\n  }\n\n  _handleSubmit(event) {\n    event.preventDefault();\n    console.log('handle submit - ', this.state.file);\n  }\n\n  _handleImageChange(event) {\n    event.preventDefault();\n    let reader = new FileReader();\n    let file = event.target.files[0];\n    this.setState({\n      imageName: file.name\n    });\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    const editUser = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      userName: this.state.userName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n    this.props.createNewUser(editUser, this.props.history);\n  }\n\n  render() {\n    // Check errors\n    const errors = this.state.errors;\n    let imagePreviewUrl = this.state.imagePreviewUrl;\n    let $imagePreview = null;\n\n    if (imagePreviewUrl) {\n      $imagePreview = React.createElement(\"img\", {\n        src: imagePreviewUrl,\n        alt: this.state.imageName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      });\n    } else {\n      $imagePreview = React.createElement(\"div\", {\n        className: \"previewText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"section\", {\n      className: \"user-profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"d-flex justify-content-center pb-4 pt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Profile\"), React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group pt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"firstName\",\n      className: classnames('form-control', {\n        'is-invalid': errors.firstName\n      }),\n      placeholder: \"First Name\",\n      required: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), errors.firstName && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, errors.firstName)), React.createElement(\"div\", {\n      className: \"form-group pt-2 pb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"lastName\",\n      className: classnames('form-control', {\n        'is-invalid': errors.lastName\n      }),\n      placeholder: \"Last Name\",\n      required: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), errors.lastName && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, errors.lastName)), React.createElement(\"div\", {\n      className: \"form-group pt-2 pb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      name: \"userName\",\n      className: classnames('form-control', {\n        'is-invalid': errors.userName\n      }),\n      placeholder: \"Email\",\n      required: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), errors.userName && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, errors.userName)), React.createElement(\"div\", {\n      className: \"form-group pt-2 pb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      className: classnames('form-control', {\n        'is-invalid': errors.password\n      }),\n      placeholder: \"Password\",\n      required: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), errors.password && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, errors.password)), React.createElement(\"div\", {\n      className: \"form-group pt-2 pb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      name: \"confirmPassword\",\n      className: classnames('form-control', {\n        'is-invalid': errors.confirmPassword\n      }),\n      placeholder: \"Repeat Password\",\n      required: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), errors.confirmPassword && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, errors.confirmPassword)), React.createElement(\"div\", {\n      className: \"image-upload  pt-3 pb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => this._handleSubmit(e),\n      className: \"pr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"file btn  btn-outline-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Upload\", React.createElement(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      onChange: e => this._handleImageChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"delete-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(MaterialIcon, {\n      icon: \"delete\",\n      color: \"#d9534f\",\n      onClick: this.deleteImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"pl-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, this.state.imageName)), React.createElement(\"div\", {\n      className: \"imgPreview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, $imagePreview)), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-danger\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Edit\"))))));\n  }\n\n} // Redux\n\n\nUserProfile.propTypes = {\n  getUser: PropTypes.func.isRequired,\n  createNewUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  createNewUser\n})(UserProfile);","map":{"version":3,"sources":["/Users/michalevo/Desktop/My_Code/React/location-share-app-client/location-share-app/src/components/UserProfile.jsx"],"names":["React","Component","MaterialIcon","createNewUser","getUser","PropTypes","connect","classnames","UserProfile","constructor","props","state","firstName","lastName","userName","password","confirmPassword","file","imagePreviewUrl","imageName","errors","handleChange","bind","deleteImage","onSubmit","componentWillReceiveProps","nextProps","user","id","setState","componentDidMount","match","params","history","event","target","name","value","_handleSubmit","preventDefault","console","log","_handleImageChange","reader","FileReader","files","onloadend","result","readAsDataURL","editUser","render","$imagePreview","e","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MaterialIcon from 'material-icons-react';\nimport { createNewUser } from '../actions/securityActions';\nimport { getUser } from '../actions/projectActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\n\n// Custom CSS\nimport '../assets/css/components/create-location.css';\n\nclass UserProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      userName: '',\n      password: '',\n      confirmPassword: '',\n      file: '',\n      imagePreviewUrl: '',\n      imageName: '',\n      errors: {},\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.deleteImage = this.deleteImage.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // Check props for that post from DB per Redux\n  componentWillReceiveProps(nextProps) {\n    const { id, firstName, lastName, userName, password, confirmPassword } = nextProps.user;\n\n    this.setState({\n      id,\n      firstName,\n      lastName,\n      userName,\n      password,\n      confirmPassword,\n    });\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  componentDidMount() {\n    // Find ID from URL\n    const { id } = this.props.match.params;\n    // Take data from server\n    this.props.getUser(id, this.props.history);\n  }\n\n  //* Check inputs for changes\n  handleChange(event) {\n    //* Find the right state and save content from input into state\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  deleteImage() {\n    this.setState({ imagePreviewUrl: '', imageName: '', file: '' });\n  }\n\n  _handleSubmit(event) {\n    event.preventDefault();\n    console.log('handle submit - ', this.state.file);\n  }\n\n  _handleImageChange(event) {\n    event.preventDefault();\n\n    let reader = new FileReader();\n    let file = event.target.files[0];\n\n    this.setState({ imageName: file.name });\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result,\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n\n    const editUser = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      userName: this.state.userName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n    };\n\n    this.props.createNewUser(editUser, this.props.history);\n  }\n\n  render() {\n    // Check errors\n    const { errors } = this.state;\n\n    let { imagePreviewUrl } = this.state;\n    let $imagePreview = null;\n    if (imagePreviewUrl) {\n      $imagePreview = <img src={imagePreviewUrl} alt={this.state.imageName} />;\n    } else {\n      $imagePreview = <div className=\"previewText\"></div>;\n    }\n\n    return (\n      <section className=\"user-profile\">\n        <div className=\"container\">\n          <h1 className=\"d-flex justify-content-center pb-4 pt-4\">Profile</h1>\n\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <form>\n                {/* START First Name */}\n                <div className=\"form-group pt-2\">\n                  <input\n                    type=\"text\"\n                    name=\"firstName\"\n                    className={classnames('form-control', { 'is-invalid': errors.firstName })}\n                    placeholder=\"First Name\"\n                    required\n                    onChange={this.handleChange}\n                  />\n                  {errors.firstName && <div className=\"invalid-feedback\">{errors.firstName}</div>}\n                </div>\n                {/* END First Name */}\n\n                {/* START Last Name */}\n                <div className=\"form-group pt-2 pb-2\">\n                  <input\n                    type=\"text\"\n                    name=\"lastName\"\n                    className={classnames('form-control', { 'is-invalid': errors.lastName })}\n                    placeholder=\"Last Name\"\n                    required\n                    onChange={this.handleChange}\n                  />\n                  {errors.lastName && <div className=\"invalid-feedback\">{errors.lastName}</div>}\n                </div>\n                {/* END Last Name */}\n\n                {/* START UserName - Email */}\n                <div className=\"form-group pt-2 pb-2\">\n                  <input\n                    type=\"email\"\n                    name=\"userName\"\n                    className={classnames('form-control', { 'is-invalid': errors.userName })}\n                    placeholder=\"Email\"\n                    required\n                    onChange={this.handleChange}\n                  />\n                  {errors.userName && <div className=\"invalid-feedback\">{errors.userName}</div>}\n                </div>\n                {/* END UserName - Email */}\n\n                {/* START Password */}\n                <div className=\"form-group pt-2 pb-2\">\n                  <input\n                    type=\"password\"\n                    name=\"password\"\n                    className={classnames('form-control', { 'is-invalid': errors.password })}\n                    placeholder=\"Password\"\n                    required\n                    onChange={this.handleChange}\n                  />\n                  {errors.password && <div className=\"invalid-feedback\">{errors.password}</div>}\n                </div>\n                {/* END Password */}\n\n                {/* START Password Repeat */}\n                <div className=\"form-group pt-2 pb-2\">\n                  <input\n                    type=\"password\"\n                    name=\"confirmPassword\"\n                    className={classnames('form-control', { 'is-invalid': errors.confirmPassword })}\n                    placeholder=\"Repeat Password\"\n                    required\n                    onChange={this.handleChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\n                  )}\n                </div>\n                {/* END Password repeat*/}\n\n                {/* START Image upload */}\n                <div className=\"image-upload  pt-3 pb-5\">\n                  <form onSubmit={(e) => this._handleSubmit(e)} className=\"pr-5\">\n                    <div className=\"file btn  btn-outline-primary\">\n                      Upload\n                      <input type=\"file\" name=\"file\" onChange={(e) => this._handleImageChange(e)} />\n                    </div>\n                  </form>\n\n                  {/* START Delete icon */}\n                  <div className=\"delete-icon\">\n                    <MaterialIcon icon=\"delete\" color=\"#d9534f\" onClick={this.deleteImage} />\n                    <p className=\"pl-3\">{this.state.imageName}</p>\n                  </div>\n                  {/* END Delete icon */}\n\n                  {/* Show loaded image as preview */}\n                  <div className=\"imgPreview\">{$imagePreview}</div>\n                </div>\n                {/* END Image upload */}\n\n                <button type=\"submit\" className=\"btn btn-outline-danger\" onClick={this.onSubmit}>\n                  Edit\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\n// Redux\nUserProfile.propTypes = {\n  getUser: PropTypes.func.isRequired,\n  createNewUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { createNewUser })(UserProfile);\n"]},"metadata":{},"sourceType":"module"}