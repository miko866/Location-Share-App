{"ast":null,"code":"var _jsxFileName = \"/Users/michalevo/Desktop/My_Code/React/location-share-app-client/location-share-app/src/components/LoginComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthenticationController from '../controllers/AuthenticationController.js';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport { login } from '../actions/securityActions';\nimport '../assets/css/components/login-component.css';\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: '',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    }; //* Register methods\n\n    this.handleChange = this.handleChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  } //* Check inputs for changes\n\n\n  handleChange(event) {\n    //* Find the right state and save content from input into state\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push('/');\n    } else {\n      sessionStorage.setItem('jwtToken', '');\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  } //* Make login to App\n\n\n  onSubmit(event) {\n    event.preventDefault();\n    const LoginRequest = {\n      userName: this.state.userName,\n      password: this.state.password\n    };\n    this.props.login(LoginRequest); // //* Check the credentials\n    // if (this.state.username === 'admin@admin.com' && this.state.password === 'admin') {\n    //   //* Call method to save credentials into Sessions\n    //   AuthenticationController.registerSuccessfulLogin(this.state.username, this.state.password);\n    //   //* Redirect to Dashboard\n    //   this.props.history.push('/');\n    // } else {\n    //   //* If false credentials show Alert message\n    //   this.setState({ hasLoginFailed: true }, () => {\n    //     window.setTimeout(() => {\n    //       this.setState({ hasLoginFailed: false });\n    //     }, 7000);\n    //   });\n    //   this.setState({ showSuccessMessage: false });\n    // }\n    // return;\n  }\n\n  render() {\n    const errors = this.state.errors;\n    return React.createElement(\"section\", {\n      className: \"custom-card-login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"d-flex justify-content-center pb-4 pt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Login\"), this.state.hasLoginFailed && React.createElement(\"div\", {\n      className: \"alert alert-warning\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Invalid Credentials\"), this.state.showSuccessMessage && React.createElement(\"div\", {\n      className: \"alert alert-success\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Login successful\"), React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group pt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      name: \"userName\",\n      className: \"form-control\",\n      \"aria-describedby\": \"emailHelp\",\n      placeholder: \"Email\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group pt-2 pb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      className: \"form-control\",\n      id: \"exampleInputPassword1\",\n      placeholder: \"Password\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-danger\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Login\"), React.createElement(Link, {\n      className: \"btn btn-link ml-5\",\n      to: \"/resetPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      className: \"text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Forget Password\")))))));\n  }\n\n}\n\nLoginComponent.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(LoginComponent);","map":{"version":3,"sources":["/Users/michalevo/Desktop/My_Code/React/location-share-app-client/location-share-app/src/components/LoginComponent.jsx"],"names":["React","Component","Link","AuthenticationController","PropTypes","connect","classnames","login","LoginComponent","constructor","props","state","userName","password","hasLoginFailed","showSuccessMessage","handleChange","bind","onSubmit","event","setState","target","name","value","componentWillReceiveProps","nextProps","security","validToken","history","push","sessionStorage","setItem","errors","preventDefault","LoginRequest","render","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthenticationController from '../controllers/AuthenticationController.js';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport { login } from '../actions/securityActions';\n\nimport '../assets/css/components/login-component.css';\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: '',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false,\n    };\n\n    //* Register methods\n    this.handleChange = this.handleChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  //* Check inputs for changes\n  handleChange(event) {\n    //* Find the right state and save content from input into state\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push('/');\n    } else {\n      sessionStorage.setItem('jwtToken', '');\n    }\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  //* Make login to App\n  onSubmit(event) {\n    event.preventDefault();\n\n    const LoginRequest = {\n      userName: this.state.userName,\n      password: this.state.password,\n    };\n\n    this.props.login(LoginRequest);\n    // //* Check the credentials\n    // if (this.state.username === 'admin@admin.com' && this.state.password === 'admin') {\n    //   //* Call method to save credentials into Sessions\n    //   AuthenticationController.registerSuccessfulLogin(this.state.username, this.state.password);\n    //   //* Redirect to Dashboard\n    //   this.props.history.push('/');\n    // } else {\n    //   //* If false credentials show Alert message\n    //   this.setState({ hasLoginFailed: true }, () => {\n    //     window.setTimeout(() => {\n    //       this.setState({ hasLoginFailed: false });\n    //     }, 7000);\n    //   });\n    //   this.setState({ showSuccessMessage: false });\n    // }\n    // return;\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <section className=\"custom-card-login\">\n        <div className=\"container\">\n          <h1 className=\"d-flex justify-content-center pb-4 pt-4\">Login</h1>\n          {/* START Alert */}\n          {this.state.hasLoginFailed && (\n            <div className=\"alert alert-warning\" role=\"alert\">\n              Invalid Credentials\n            </div>\n          )}\n          {this.state.showSuccessMessage && (\n            <div className=\"alert alert-success\" role=\"alert\">\n              Login successful\n            </div>\n          )}\n          {/* END Alert */}\n\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <form>\n                {/* START Email */}\n                <div className=\"form-group pt-2\">\n                  <input\n                    type=\"email\"\n                    name=\"userName\"\n                    className=\"form-control\"\n                    aria-describedby=\"emailHelp\"\n                    placeholder=\"Email\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {/* END Email */}\n\n                {/* START Password */}\n                <div className=\"form-group pt-2 pb-2\">\n                  <input\n                    type=\"password\"\n                    name=\"password\"\n                    className=\"form-control\"\n                    id=\"exampleInputPassword1\"\n                    placeholder=\"Password\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {/* END Password */}\n                <button type=\"submit\" className=\"btn btn-outline-danger\" onClick={this.onSubmit}>\n                  Login\n                </button>\n\n                {/* Forget Password */}\n                <Link className=\"btn btn-link ml-5\" to=\"/resetPassword\">\n                  <small className=\"text-primary\">Forget Password</small>\n                </Link>\n              </form>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nLoginComponent.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { login })(LoginComponent);\n"]},"metadata":{},"sourceType":"module"}